
#include "internal.h"
#include "../terminal/terminal/v568/driver/basefunc/vregdef.h"
#include "../terminal/terminal/v868/v868rdk/driver/basefunc/vregdef.h"
#include "../terminal/terminal/v568/v568testdemo/test1treg.h"



static const TRegUnit gSifReg[] =
{
	{ V568_REGTYPE, "V5_REG_SIF_SNR_MODE", V5_REG_SIF_SNR_MODE, 0, 0, "[7]: Sync_mode:0: Normal Sync Mode;1: CCIR656 Sync Mode;\n[6]: yuv_flag:1: YUV 4:2:2;0: bayer pattern;\n[5]: sync_en:If this bit is ¡°0¡±, syncgen module will stop at once;\n[4]: Polarity_mode;\n[3]: Polarity_en;\n[2]: sensor power on;\n[1]:Sensor enable;\n[0]:sensor rese" },
	{ V568_REGTYPE, "V5_REG_SIF_SNROP_MODE", V5_REG_SIF_SNROP_MODE, 0, 0, "[7]: start capture;\n[6]: sg_en: 1: Sycn generator operates and outputs normal sync signals to ISP;\n[5]: serial_sel: 1: serial bus is selected.0: I2C bus is selected.;\n[4]: 1:serial_bus clock reversed polarity;\n[3]:sensor Clk reverse enable;\n[2]: IicSel;\n[1]: Obreg enable;\n[0]: Sync direction" },
	{ V568_REGTYPE, "V5_REG_SIF_YUV_FORMAT", V5_REG_SIF_YUV_FORMAT, 0, 0, "[7:6] tref_lh_blk;\n[5:4] tref_lt_blk;\n[3:2] Internal delay count (sif_clk) when handle YUV data;\n[1:0]: 00: sensor outputs ¡®UYVY¡¯;01:outputs ¡®VYUY¡¯;10:outputs ¡®YUYV¡¯;11:outputs ¡®YVYU¡¯;" },
	{ V568_REGTYPE, "V5_REG_SIF_V_CONTROL", V5_REG_SIF_V_CONTROL, 0, 0, "[5]: Vref_full: 0:sensor¡¯s Hsync has level change.1:Hsync has not any level change;\n[4]: vd_mode:0: vsync send to sensor more than 1 row;\n[3]: vsync_mode: 0: 0: vsync send to isp more than 1 row;;\n[2]: v_bypass,1: the input vertical signal is bypass to ISP;\n[1]: v_polarity- input vertical signal polarity flag;\n[0]: reserved" },
	{ V568_REGTYPE, "V5_REG_SIF_H_CONTROL", V5_REG_SIF_H_CONTROL, 0, 0, "[7:6] tref_lh_vld;\n[5:4] tref_lt_vld;\n[3]: h_bypass: 1: the input horizontal signal is bypass to ISP;;\n[2]: h_polarity:1: input horizontal signal is active high;;\n[1]: h_flag-¨C input horizontal signal flag;\n[0]: reserved" },
	{ V568_REGTYPE, "V5_REG_SIF_SNRCLK_CNT", V5_REG_SIF_SNRCLK_CNT, 0, 0, "This register is used to program the master clock output to sensor" },
	{ V568_REGTYPE, "V5_REG_SIF_PIXRATE_SEL", V5_REG_SIF_PIXRATE_SEL, 0, 0, "[5:0]: Pixel rate select" },
	{ V568_REGTYPE, "V5_REG_SIF_SICLK_CNT", V5_REG_SIF_SICLK_CNT, 0, 0, "This register is used to program the working frequency of the serial bus" },
	{ V568_REGTYPE, "V5_REG_SIF_I2C_CLKCNTH", V5_REG_SIF_I2C_CLKCNTH, 0, 0, "make sure that the working frequency of I2C is 100k when the sensor interface clock changes" },
	{ V568_REGTYPE, "V5_REG_SIF_I2C_CLKCNTL", V5_REG_SIF_I2C_CLKCNTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_I2C_INTER_TRANSH", V5_REG_SIF_I2C_INTER_TRANSH, 0, 0, "make sure the latency between two IIC-write actions in the batch write mode will meet the requirements" },
	{ V568_REGTYPE, "V5_REG_SIF_I2C_INTER_TRANSL", V5_REG_SIF_I2C_INTER_TRANSL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_HD_STARTH", V5_REG_SIF_HD_STARTH, 0, 0, "adjust the width of hsync output to sensor" },
	{ V568_REGTYPE, "V5_REG_SIF_HD_STARTL", V5_REG_SIF_HD_STARTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_HD_STOPH", V5_REG_SIF_HD_STOPH, 0, 0, "adjust the width of hsync output to sensor" },
	{ V568_REGTYPE, "V5_REG_SIF_HD_STOPL", V5_REG_SIF_HD_STOPL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_HREF_STARTH", V5_REG_SIF_HREF_STARTH, 0, 0, "position and length of the href, which is outputted to ISP/Special Effect" },
	{ V568_REGTYPE, "V5_REG_SIF_HREF_STARTL", V5_REG_SIF_HREF_STARTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_HREF_LENGTHH", V5_REG_SIF_HREF_LENGTHH, 0, 0, "position and length of the href, which is outputted to ISP/Special Effect" },
	{ V568_REGTYPE, "V5_REG_SIF_HREF_LENGTHL", V5_REG_SIF_HREF_LENGTHL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_VD_STARTH", V5_REG_SIF_VD_STARTH, 0, 0, " position of vsync, which is output to sensor" },
	{ V568_REGTYPE, "V5_REG_SIF_VD_STARTL", V5_REG_SIF_VD_STARTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_VD_STOPH", V5_REG_SIF_VD_STOPH, 0, 0, " position of vsync, which is output to sensor" },
	{ V568_REGTYPE, "V5_REG_SIF_VD_STOPL", V5_REG_SIF_VD_STOPL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_VSYNC_STARTH", V5_REG_SIF_VSYNC_STARTH, 0, 0, " position of vsync, which is output to ISP/Special Effect" },
	{ V568_REGTYPE, "V5_REG_SIF_VSYNC_STARTL", V5_REG_SIF_VSYNC_STARTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_VSYNC_STOPH", V5_REG_SIF_VSYNC_STOPH, 0, 0, " position of vsync, which is output to ISP/Special Effect" },
	{ V568_REGTYPE, "V5_REG_SIF_VSYNC_STOPL", V5_REG_SIF_VSYNC_STOPL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_VREF_STARTH", V5_REG_SIF_VREF_STARTH, 0, 0, "position of vref, which is output to ISP/Special Effect" },
	{ V568_REGTYPE, "V5_REG_SIF_VREF_STARTL", V5_REG_SIF_VREF_STARTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_VREF_STOPH", V5_REG_SIF_VREF_STOPH, 0, 0, "position of vref, which is output to ISP/Special Effect" },
	{ V568_REGTYPE, "V5_REG_SIF_VREF_STOPL", V5_REG_SIF_VREF_STOPL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_HDFALL_STARTH", V5_REG_SIF_HDFALL_STARTH, 0, 0, "position of AECNT pulse, which is output to sensor" },
	{ V568_REGTYPE, "V5_REG_SIF_HDFALL_STARTL", V5_REG_SIF_HDFALL_STARTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_HDFALL_STOPH", V5_REG_SIF_HDFALL_STOPH, 0, 0, "position of AECNT pulse, which is output to sensor" },
	{ V568_REGTYPE, "V5_REG_SIF_HDFALL_STOPL", V5_REG_SIF_HDFALL_STOPL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_VDFALL_STARTH", V5_REG_SIF_VDFALL_STARTH, 0, 0, " position of serial_en, which is the enable signal for serial bus" },
	{ V568_REGTYPE, "V5_REG_SIF_VDFALL_STARTL", V5_REG_SIF_VDFALL_STARTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_VDFALL_STOPH", V5_REG_SIF_VDFALL_STOPH, 0, 0, " position of serial_en, which is the enable signal for serial bus" },
	{ V568_REGTYPE, "V5_REG_SIF_VDFALL_STOPL", V5_REG_SIF_VDFALL_STOPL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_COLMAXH", V5_REG_SIF_COLMAXH, 0, 0, " maximum of columns in a frame" },
	{ V568_REGTYPE, "V5_REG_SIF_COLMAXL", V5_REG_SIF_COLMAXL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_ROWMAXH", V5_REG_SIF_ROWMAXH, 0, 0, "maximum of rows in a frame" },
	{ V568_REGTYPE, "V5_REG_SIF_ROWMAXL", V5_REG_SIF_ROWMAXL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_EXTIMEH", V5_REG_SIF_EXTIMEH, 0, 0, "sensor exposure time value" },
	{ V568_REGTYPE, "V5_REG_SIF_EXTIMEL", V5_REG_SIF_EXTIMEL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_GAIN", V5_REG_SIF_GAIN, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_OBREG", V5_REG_SIF_OBREG, 0, 0, "When obreg_en bit is 1, subtract this value from the image data of TASC"},
	{ V568_REGTYPE, "V5_REG_SIF_IIC_BYTE", V5_REG_SIF_IIC_BYTE, 0, 0, "the data byte number during a Iic read/write operation. The maximum is 3 and the minimum is 1" },
	{ V568_REGTYPE, "V5_REG_SIF_IIC_DEVADDR", V5_REG_SIF_IIC_DEVADDR, 0, 0, "[7]:check sensor: 1 : check acknowledge bit.0:not check;\n[6:0]IIC device address" },
	{ V568_REGTYPE, "V5_REG_SIF_SNRWRDATAH", V5_REG_SIF_SNRWRDATAH, 0, 0, " the data to be written into sensor registers through I2C bus" },
	{ V568_REGTYPE, "V5_REG_SIF_SNRWRDATAM", V5_REG_SIF_SNRWRDATAM, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_SNRWRDATAL", V5_REG_SIF_SNRWRDATAL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_SNRACSCTR", V5_REG_SIF_SNRACSCTR, 0, 0, "[1]: read sensor trigger bit;\n[0]: write sensor trigger bit " },
	{ V568_REGTYPE, "V5_REG_SIF_SNRADDR", V5_REG_SIF_SNRADDR, 0, 0, "the sensor register address" },
	{ V568_REGTYPE, "V5_REG_SIF_SNRSTATUS", V5_REG_SIF_SNRSTATUS, 0, 0, "snr_status	0: I2C is idle;1: The sensor is transferring data with the chip (read or write) through I2C" },
	{ V568_REGTYPE, "V5_REG_SIF_SNRRDDATAH", V5_REG_SIF_SNRRDDATAH, 0, 0, "the data read from the sensor registers through I2C bus" },
	{ V568_REGTYPE, "V5_REG_SIF_SNRRDDATAM", V5_REG_SIF_SNRRDDATAM, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_SNRRDDATAL", V5_REG_SIF_SNRRDDATAL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_BUS_STATE", V5_REG_SIF_BUS_STATE, 0, 0, "[2]:serial_en.1: bus is ready to transfer data.\n[1]: iic_idle.1: IIC master is ready to transfer data.\n[0]: iic_noack.1: iic slave does not acknowledge" },
	{ V568_REGTYPE, "V5_REG_SIF_AEWIN_STARTH", V5_REG_SIF_AEWIN_STARTH, 0, 0, " position of AE window" },
	{ V568_REGTYPE, "V5_REG_SIF_AEWIN_STARTL", V5_REG_SIF_AEWIN_STARTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AEWIN_STOPH", V5_REG_SIF_AEWIN_STOPH, 0, 0, " position of AE window" },
	{ V568_REGTYPE, "V5_REG_SIF_AEWIN_STOPL", V5_REG_SIF_AEWIN_STOPL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AEPIN_CTRL", V5_REG_SIF_AEPIN_CTRL, 0, 0, "[3]:ae_sbus;\n[2:1]: AE_mode;\n[0]: AE_pol" },
	{ V568_REGTYPE, "V5_REG_SIF_AEBUS_CTRL", V5_REG_SIF_AEBUS_CTRL, 0, 0, "[4]: batch_done;\n[3]: AE_done;\n[2:0]: the number of separate sensor register addresses in a batch."},
	{ V568_REGTYPE, "V5_REG_SIF_B_CNTH", V5_REG_SIF_B_CNTH, 0, 0, "the byte count for each batch write" },
	{ V568_REGTYPE, "V5_REG_SIF_B_CNTL", V5_REG_SIF_B_CNTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA", V5_REG_SIF_AE0_DATA, 0, 0, " 20 8-bit reigsters to hold the data for batch writing sensor registers" },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_1", V5_REG_SIF_AE0_DATA_1, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_2", V5_REG_SIF_AE0_DATA_2, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_3", V5_REG_SIF_AE0_DATA_3, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_4", V5_REG_SIF_AE0_DATA_4, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_5", V5_REG_SIF_AE0_DATA_5, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_6", V5_REG_SIF_AE0_DATA_6, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_7", V5_REG_SIF_AE0_DATA_7, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_8", V5_REG_SIF_AE0_DATA_8, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_9", V5_REG_SIF_AE0_DATA_9, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_10", V5_REG_SIF_AE0_DATA_10, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_11", V5_REG_SIF_AE0_DATA_11, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_12", V5_REG_SIF_AE0_DATA_12, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_13", V5_REG_SIF_AE0_DATA_13, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_14", V5_REG_SIF_AE0_DATA_14, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_15", V5_REG_SIF_AE0_DATA_15, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_16", V5_REG_SIF_AE0_DATA_16, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_17", V5_REG_SIF_AE0_DATA_17, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_18", V5_REG_SIF_AE0_DATA_18, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_AE0_DATA_19", V5_REG_SIF_AE0_DATA_19, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_EDGE_CHOS", V5_REG_SIF_EDGE_CHOS, 0, 0, "Choose posedge or negedge sample sensor inputs" },
	{ V568_REGTYPE, "V5_REG_SIF_COUNTER_RESET", V5_REG_SIF_COUNTER_RESET, 0, 0, " sif counter reset" },
	{ V568_REGTYPE, "V5_REG_SIF_CAPTURE_DELAY", V5_REG_SIF_CAPTURE_DELAY, 0, 0, "[1:0] capture_delay" },
	{ V568_REGTYPE, "V5_REG_SIF_FL_PWM_EN", V5_REG_SIF_FL_PWM_EN, 0, 0, "Flash light charge circuit operation enable" },
	{ V568_REGTYPE, "V5_REG_SIF_FL_POLARITY", V5_REG_SIF_FL_POLARITY, 0, 0, "[0]:Flash light charge signal polarity;\n[1]	: Flash light charge type" },
	{ V568_REGTYPE, "V5_REG_SIF_FL_PWM_CNT_TGT_H", V5_REG_SIF_FL_PWM_CNT_TGT_H, 0, 0, "FL_PWM_CNT_TGT = sif_clk frq / charge frq" },
	{ V568_REGTYPE, "V5_REG_SIF_FL_PWM_CNT_TGT_L", V5_REG_SIF_FL_PWM_CNT_TGT_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_FL_PWM_CNT_DUTY_H", V5_REG_SIF_FL_PWM_CNT_DUTY_H, 0, 0, "FL_PWM_CNT_DUTY = FL_PWM_CNT_TGT * (1- charge duty)" },
	{ V568_REGTYPE, "V5_REG_SIF_FL_PWM_CNT_DUTY_L", V5_REG_SIF_FL_PWM_CNT_DUTY_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_FL_DUTY", V5_REG_SIF_FL_DUTY, 0, 0, "The fl_duty is used to control the charge pulse duty." },
	{ V568_REGTYPE, "V5_REG_SIF_M10US_CNT_EN", V5_REG_SIF_M10US_CNT_EN, 0, 0, "[0] : Enable internal counter to generate  flg_m_10us_clk which period is 10us and is the base of flash light trigger" },
	{ V568_REGTYPE, "V5_REG_SIF_M10US_TGT", V5_REG_SIF_M10US_TGT, 0, 0, " value = 10us/sif_clk_period" },
	{ V568_REGTYPE, "V5_REG_SIF_DELAY_FLASH_TGT_H", V5_REG_SIF_DELAY_FLASH_TGT_H, 0, 0, ".Delay period after frame_end interrupt when reg01h[7] capture is high" },
	{ V568_REGTYPE, "V5_REG_SIF_DELAY_FLASH_TGT_M", V5_REG_SIF_DELAY_FLASH_TGT_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_DELAY_FLASH_TGT_L", V5_REG_SIF_DELAY_FLASH_TGT_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_TRIGGER_TGT_H", V5_REG_SIF_TRIGGER_TGT_H, 0, 0, "Flash light trigger active period, base on 10 us unit" },
	{ V568_REGTYPE, "V5_REG_SIF_TRIGGER_TGT_L", V5_REG_SIF_TRIGGER_TGT_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_TRIGGER_STYLE_SEL", V5_REG_SIF_TRIGGER_STYLE_SEL, 0, 0, "[0] : select the way to start trigger;\n[1]: select the way of locating fl trigger postion." },
	{ V568_REGTYPE, "V5_REG_SIF_START_TRIGGER", V5_REG_SIF_START_TRIGGER, 0, 0, "[0] : host can use this reg to generate trigger" },
	{ V568_REGTYPE, "V5_REG_SIF_TRIGGER_START_ROW_H", V5_REG_SIF_TRIGGER_START_ROW_H, 0, 0, "Trigger start row position" },
	{ V568_REGTYPE, "V5_REG_SIF_TRIGGER_START_ROW_L", V5_REG_SIF_TRIGGER_START_ROW_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_SIF_TRIGGER_START_COL_H", V5_REG_SIF_TRIGGER_START_COL_H, 0, 0, "Trigger start column postion" },
	{ V568_REGTYPE, "V5_REG_SIF_TRIGGER_START_COL_L", V5_REG_SIF_TRIGGER_START_COL_L, 0, 0 }
};

static const TRegUnit gCtrlReg[] =
{
	{ V568_REGTYPE, "V5_REG_CPM_UMCTRL", V5_REG_CPM_UMCTRL, 0, 0, "used to control the debug pin.\n The high 4bit assign the different modules." },
	{ V568_REGTYPE, "V5_REG_CPM_RSTCTRL1_L", V5_REG_CPM_RSTCTRL1_L, 0, 0, "software reset control register\n can be cleared by the hardware reset." },
	{ V568_REGTYPE, "V5_REG_CPM_RSTCTRL1_H", V5_REG_CPM_RSTCTRL1_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_CPM_RSTCTRL2", V5_REG_CPM_RSTCTRL2, 0, 0, "Global software reset . can be cleared by the hardware reset." },
	{ V568_REGTYPE, "V5_REG_CPM_CHIP_ID_0", V5_REG_CPM_CHIP_ID_0, 0, 0, "chip ID" },
	{ V568_REGTYPE, "V5_REG_CPM_CHIP_ID_1", V5_REG_CPM_CHIP_ID_1, 0, 0 },
	{ V568_REGTYPE, "V5_REG_CPM_CHIP_ID_2", V5_REG_CPM_CHIP_ID_2, 0, 0 },
	{ V568_REGTYPE, "V5_REG_CPM_CHIP_ID_3", V5_REG_CPM_CHIP_ID_3, 0, 0 },
	{ V568_REGTYPE, "V5_REG_CPM_CLKOFF_L", V5_REG_CPM_CLKOFF_L, 0, 0, "used to control the module clock.\n 1: the clock of this module is gated off." },
	{ V568_REGTYPE, "V5_REG_CPM_CLKOFF_H", V5_REG_CPM_CLKOFF_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_CPM_INTEN", V5_REG_CPM_INTEN, 0, 0, "Interrupt enable register.\n Enable interrupt request to first level flag,\n corresponding bit is '1',\n '0' the request is masked." },
	{ V568_REGTYPE, "V5_REG_CPM_INTCTRL", V5_REG_CPM_INTCTRL, 0, 0, "controls the interrupt of VC0558." },
	{ V568_REGTYPE, "V5_REG_CPM_INTSERV", V5_REG_CPM_INTSERV, 0, 0, "interrupt serve flag, when corresponding bit is '1', means the interrupt is under serving,\n '0' means interrupt service over." },
	{ V568_REGTYPE, "V5_REG_CPM_INTFLAG", V5_REG_CPM_INTFLAG, 0, 0, "first level interrupt flag\n, cleared by set corresponding bit of INTSERV register." },
	{ V568_REGTYPE, "V5_REG_CPM_INTFLAG0", V5_REG_CPM_INTFLAG0, 0, 0, "The second level interrupt status flag\n [0]:sif_cpm_vsync_int\n [1]: sif_cpm_frameend_int" },
	{ V568_REGTYPE, "V5_REG_CPM_INTFLAG1", V5_REG_CPM_INTFLAG1, 0, 0, "The second level interrupt status flag\n [0]:isp_cpm_auto_int\n [1]:y_min_int\n [2]:his_int\n [3]:antif_int\n [4]:auto_foc_int" },
	{ V568_REGTYPE, "V5_REG_CPM_INTFLAG2", V5_REG_CPM_INTFLAG2, 0, 0, "The second level interrupt status flag\n [0]:lbuf_cpm_read_int" },
	{ V568_REGTYPE, "V5_REG_CPM_INTFLAG3", V5_REG_CPM_INTFLAG3, 0, 0 ,"The second level interrupt status flag\n [0]:jpeg_cpm_enc_done_int\n [1]:jpeg_cpm_dec_done_int\n [2]:jpeg_cpm_dec_err_int" },
	{ V568_REGTYPE, "V5_REG_CPM_INTFLAG4", V5_REG_CPM_INTFLAG4, 0, 0, "The second level interrupt status flag\n [0]:ge_cpm_cmd_done_int\n [1]:ge_cpm_buf_done_int" },
	{ V568_REGTYPE, "V5_REG_CPM_INTFLAG5", V5_REG_CPM_INTFLAG5, 0, 0, "The second level interrupt status flag\n [0]:marb_cpm_jbuf_fifocnt_int\n [1]:marb_cpm_jbuf_intv_int\n [2]:marb_cpm_jpeg_done_int\n [3]:marb_cpm_jbuf_err_int\n [4]:marb_cpm_tbuf_fifcnt_int\n [5]:marb_cpm_tbuf_intv_int\n [6]:marb_cpm_thumb_done_int\n [7]:marb_cpm_thumb_err_int" },
	{ V568_REGTYPE, "V5_REG_CPM_INTFLAG6", V5_REG_CPM_INTFLAG6, 0, 0, "The second level interrupt status flag\n [0]:lcdc_cpm_layerb_done_int\n [1]:lcdc_cpm_layerbg_done_int\n [2]:lcdc_cpm_fifo_warning_int\n [3]:lcdc_cpm_vb_timeout_int\n [4]:lcdc_cpm_gb_timeout_int" },
	{ V568_REGTYPE, "V5_REG_CPM_INTEN0", V5_REG_CPM_INTEN0, 0, 0, "sif 2nd level interrupt enable" },
	{ V568_REGTYPE, "V5_REG_CPM_INTEN1", V5_REG_CPM_INTEN1, 0, 0, "isp 2nd level interrupt enable" },
	{ V568_REGTYPE, "V5_REG_CPM_INTEN2", V5_REG_CPM_INTEN2, 0, 0, "lbuf 2nd level interrupt enable" },
	{ V568_REGTYPE, "V5_REG_CPM_INTEN3", V5_REG_CPM_INTEN3, 0, 0, "jpeg 2nd level interrupt enable" },
	{ V568_REGTYPE, "V5_REG_CPM_INTEN4", V5_REG_CPM_INTEN4, 0, 0, "ge 2nd level interrupt enable" },
	{ V568_REGTYPE, "V5_REG_CPM_INTEN5", V5_REG_CPM_INTEN5, 0, 0, "marb 2nd level interrupt enable" },
	{ V568_REGTYPE, "V5_REG_CPM_INTEN6", V5_REG_CPM_INTEN6, 0, 0, "lcdc 2nd level interrupt enable" },
	{ V568_REGTYPE, "V5_REG_CPM_CPU_PC", V5_REG_CPM_CPU_PC, 0, 0, "control the CPU bus direction" },
	{ V568_REGTYPE, "V5_REG_CPM_LCD_PC", V5_REG_CPM_LCD_PC, 0, 0, "control the lcd interface signals direction" },
	{ V568_REGTYPE, "V5_REG_CPM_CS_PC_L", V5_REG_CPM_CS_PC_L, 0, 0, "control the sensor interface signals direction and pullup resistance." },
	{ V568_REGTYPE, "V5_REG_CPM_CS_PC_H", V5_REG_CPM_CS_PC_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_CPM_CS_DATA_PC_L", V5_REG_CPM_CS_DATA_PC_L, 0, 0, "control sensor data bus pulldown resistance" },
	{ V568_REGTYPE, "V5_REG_CPM_CS_DATA_PC_H", V5_REG_CPM_CS_DATA_PC_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_CPM_GPIO_CFG", V5_REG_CPM_GPIO_CFG		, 0, 0, "set the configuration of GPIO pin" },
	{ V568_REGTYPE, "V5_REG_CPM_GPIO_MODE", V5_REG_CPM_GPIO_MODE	, 0, 0, "set the mode of GPIO pin" },
	{ V568_REGTYPE, "V5_REG_CPM_GPIO_DIR", V5_REG_CPM_GPIO_DIR		, 0, 0, "set the direction of GPIO pin" },
	{ V568_REGTYPE, "V5_REG_CPM_GPIO_P0	", V5_REG_CPM_GPIO_P0		, 0, 0, "data out of the GPIO pins, One bit for one GPIO pin."  },
	{ V568_REGTYPE, "V5_REG_CPM_SIF_FLASH", V5_REG_CPM_SIF_FLASH, 0, 0, "configuration of SIF flash" },
	{ V568_REGTYPE, "V5_REG_CPM_GPIO_REN_PC", V5_REG_CPM_GPIO_REN_PC, 0, 0, "control the GPIO pullup resistance" }
};

static const TRegUnit gIspReg[] =
{
	{ V568_REGTYPE, "V5_REG_ISP_CTL_BAS", V5_REG_ISP_CTL_BAS, 0, 0, "control register:[7]'1'test bar mode enable;\n[6] ¡®0¡¯ full bars ,¡¯1¡¯ video window inside bars;\n[5] ¡®1¡¯ BG line first , ¡®0¡¯ RG line first;\n[4] ¡®1¡¯ G pixel first , ¡®0¡¯ nonG pixel first;\n[3-0] image pixel rate supported" },
	{ V568_REGTYPE, "V5_REG_ISP_CTL_BAS_H", V5_REG_ISP_CTL_BAS_H, 0, 0, "control register:[15] 1: gray image;0: color image;\n[14] digital gain enable;\n[13] '1': Y Gamma Enable;'0': Disable;\n[12]  color correction Enable;\n[11] '1'RGB Gamma Enable;0: Disable;\n[10] ¡®1¡¯dpd/dpc and noise remove enable,¡®0¡¯disable;\n[9] ¡®1¡¯lens fall off enable ,¡®0¡¯disable;\n[8] ¡®1¡¯sharpen edge enable ,¡®0¡¯ disable" },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_W", V5_REG_ISP_WIN_W, 0, 0, "Video window width in test bar mode, max 640\nBit11~0 : actual width value." },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_W_H", V5_REG_ISP_WIN_W_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_H", V5_REG_ISP_WIN_H, 0, 0, "height of video window in test bar mode\nmax 480 Bit11~0 : actual height value" },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_H_H", V5_REG_ISP_WIN_H_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_IMG_W", V5_REG_ISP_IMG_W, 0, 0, "image width max1280\nBit11~0 : actual width value" },
	{ V568_REGTYPE, "V5_REG_ISP_IMG_W_H", V5_REG_ISP_IMG_W_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_IMG_H", V5_REG_ISP_IMG_H, 0, 0, "image height max 1024Bit11~0 : actual height value" },
	{ V568_REGTYPE, "V5_REG_ISP_IMG_H_H", V5_REG_ISP_IMG_H_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_FEM_M", V5_REG_ISP_FEM_M, 0, 0, " edge enhance parameters: 16*m" },
	{ V568_REGTYPE, "V5_REG_ISP_FEM_M_H", V5_REG_ISP_FEM_M_H, 0, 0, "edge enhance parameters:16*m*x2/(x2-x1)" },
	{ V568_REGTYPE, "V5_REG_ISP_FEM_X1", V5_REG_ISP_FEM_X1, 0, 0, "edge enhance parameters:x1" },
	{ V568_REGTYPE, "V5_REG_ISP_FEM_X2", V5_REG_ISP_FEM_X2, 0, 0, "edge enhance parameters:x2" },
	{ V568_REGTYPE, "V5_REG_ISP_FEM_MIN", V5_REG_ISP_FEM_MIN, 0, 0, "minimum of edge enhance value" },
	{ V568_REGTYPE, "V5_REG_ISP_FEM_MAX", V5_REG_ISP_FEM_MAX, 0, 0, "maximum of edge enhance value" },
	{ V568_REGTYPE, "V5_REG_ISP_CENTER_X", V5_REG_ISP_CENTER_X, 0, 0, "Lens fall off center X coordinate" },
	{ V568_REGTYPE, "V5_REG_ISP_CENTER_X_H", V5_REG_ISP_CENTER_X_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_CENTER_Y", V5_REG_ISP_CENTER_Y, 0, 0, "Lens fall off center Y coordinate "},
	{ V568_REGTYPE, "V5_REG_ISP_CENTER_Y_H", V5_REG_ISP_CENTER_Y_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_F2_RECPROC", V5_REG_ISP_F2_RECPROC, 0, 0, "Lens fall off focus register\n F is focus length of sensor" },
	{ V568_REGTYPE, "V5_REG_ISP_F2_RECPROC_H", V5_REG_ISP_F2_RECPROC_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AFLNCTL", V5_REG_ISP_AFLNCTL, 0, 0, "Auto-flicker detection line control register:[15] Auto-filcker line mode;recommended 0h\n[14-9] Auto-filcker line counter;recommended 3fh\n[8-0] Auto-filcker line start,\nactual start position is  AFlnstart [8:0] *8   ,recommended 08H" },
	{ V568_REGTYPE, "V5_REG_ISP_AFLNCTL_H", V5_REG_ISP_AFLNCTL_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AFTHD", V5_REG_ISP_AFTHD, 0, 0, " Auto-flicker detection statistics value " },
	{ V568_REGTYPE, "V5_REG_ISP_AFTHD_1", V5_REG_ISP_AFTHD_1, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AFTHD_2", V5_REG_ISP_AFTHD_2, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AFLNSTEP", V5_REG_ISP_AFLNSTEP, 0, 0, "Auto-flicker detection line step register:[5-2] Auto-flicker detection line step value;\n[1:0] Auto-flicker detection statistics value [25:24]" },
	{ V568_REGTYPE, "V5_REG_ISP_RGAIN", V5_REG_ISP_RGAIN, 0, 0, "Digital RGBgain register" },
	{ V568_REGTYPE, "V5_REG_ISP_BGAIN", V5_REG_ISP_BGAIN, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGAIN", V5_REG_ISP_GGAIN, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GLBGAIN", V5_REG_ISP_GLBGAIN, 0, 0, "Global gain register:[13] '1'global gain enable,'0'disable;\n[12-10] global gain effect delay;\n[9-8] actual global gain effect fraction;\n[7-0] global gain value" },
	{ V568_REGTYPE, "V5_REG_ISP_GLBCTL", V5_REG_ISP_GLBCTL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_CRADJ", V5_REG_ISP_CRADJ, 0, 0, "Cb/Cr adjust parameter register\n[15-8] Cr adjust parameter,[7-0] Cb adjust parameter" },
	{ V568_REGTYPE, "V5_REG_ISP_CBADJ", V5_REG_ISP_CBADJ, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_CROFS", V5_REG_ISP_CROFS, 0, 0, "Cb/Cr offset register\n[15-8] Cr offset in gray mode,[7-0] Cb offset " },
	{ V568_REGTYPE, "V5_REG_ISP_CBOFS", V5_REG_ISP_CBOFS, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLMAT11", V5_REG_ISP_COLMAT11, 0, 0, "Color matrix registers" },
	{ V568_REGTYPE, "V5_REG_ISP_COLMAT12", V5_REG_ISP_COLMAT12, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLMAT13", V5_REG_ISP_COLMAT13, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLMAT21", V5_REG_ISP_COLMAT21, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLMAT22", V5_REG_ISP_COLMAT22, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLMAT23", V5_REG_ISP_COLMAT23, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLMAT31", V5_REG_ISP_COLMAT31, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLMAT32", V5_REG_ISP_COLMAT32, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLMAT33", V5_REG_ISP_COLMAT33, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLOFSR", V5_REG_ISP_COLOFSR, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLOFSG", V5_REG_ISP_COLOFSG, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_COLOFSB", V5_REG_ISP_COLOFSB, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAP0", V5_REG_ISP_YGMAP0, 0, 0, "Y gamma curve start registers" },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAP1", V5_REG_ISP_YGMAP1, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAP2", V5_REG_ISP_YGMAP2, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAP3", V5_REG_ISP_YGMAP3, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAP4", V5_REG_ISP_YGMAP4, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAP5", V5_REG_ISP_YGMAP5, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAP6", V5_REG_ISP_YGMAP6, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAP7", V5_REG_ISP_YGMAP7, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAP8", V5_REG_ISP_YGMAP8, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAS0", V5_REG_ISP_YGMAS0, 0, 0, "Y gamma curve slope registers" },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAS1", V5_REG_ISP_YGMAS1, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAS2", V5_REG_ISP_YGMAS2, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAS3", V5_REG_ISP_YGMAS3, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAS4", V5_REG_ISP_YGMAS4, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAS5", V5_REG_ISP_YGMAS5, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAS6", V5_REG_ISP_YGMAS6, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAS7", V5_REG_ISP_YGMAS7, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YGMAS8", V5_REG_ISP_YGMAS8, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS0", V5_REG_ISP_RGMAS0, 0, 0, "R gamma correction registers" },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS1", V5_REG_ISP_RGMAS1, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS2", V5_REG_ISP_RGMAS2, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS3", V5_REG_ISP_RGMAS3, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS4", V5_REG_ISP_RGMAS4, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS5", V5_REG_ISP_RGMAS5, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS6", V5_REG_ISP_RGMAS6, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS7", V5_REG_ISP_RGMAS7, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS8", V5_REG_ISP_RGMAS8, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS9", V5_REG_ISP_RGMAS9, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS10", V5_REG_ISP_RGMAS10, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS11", V5_REG_ISP_RGMAS11, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS12", V5_REG_ISP_RGMAS12, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS13", V5_REG_ISP_RGMAS13, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS14", V5_REG_ISP_RGMAS14, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS15", V5_REG_ISP_RGMAS15, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RGMAS16", V5_REG_ISP_RGMAS16, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS0", V5_REG_ISP_GGMAS0, 0, 0, "G gamma correction registers" },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS1", V5_REG_ISP_GGMAS1, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS2", V5_REG_ISP_GGMAS2, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS3", V5_REG_ISP_GGMAS3, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS4", V5_REG_ISP_GGMAS4, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS5", V5_REG_ISP_GGMAS5, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS6", V5_REG_ISP_GGMAS6, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS7", V5_REG_ISP_GGMAS7, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS8", V5_REG_ISP_GGMAS8, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS9", V5_REG_ISP_GGMAS9, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS10", V5_REG_ISP_GGMAS10, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS11", V5_REG_ISP_GGMAS11, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS12", V5_REG_ISP_GGMAS12, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS13", V5_REG_ISP_GGMAS13, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS14", V5_REG_ISP_GGMAS14, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS15", V5_REG_ISP_GGMAS15, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GGMAS16", V5_REG_ISP_GGMAS16, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS0", V5_REG_ISP_BGMAS0, 0, 0, "B gamma correction registers" },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS1", V5_REG_ISP_BGMAS1, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS2", V5_REG_ISP_BGMAS2, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS3", V5_REG_ISP_BGMAS3, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS4", V5_REG_ISP_BGMAS4, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS5", V5_REG_ISP_BGMAS5, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS6", V5_REG_ISP_BGMAS6, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS7", V5_REG_ISP_BGMAS7, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS8", V5_REG_ISP_BGMAS8, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS9", V5_REG_ISP_BGMAS9, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS10", V5_REG_ISP_BGMAS10, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS11", V5_REG_ISP_BGMAS11, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS12", V5_REG_ISP_BGMAS12, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS13", V5_REG_ISP_BGMAS13, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS14", V5_REG_ISP_BGMAS14, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS15", V5_REG_ISP_BGMAS15, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BGMAS16", V5_REG_ISP_BGMAS16, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_CTL_AUTO", V5_REG_ISP_CTL_AUTO, 0, 0, "Auto-function control register:[7:6] AE weight mode;\n[4] AE W Weight mode;\n[3:1] auto function interrupt frequency;\n[0]Anti-flicker function on/off" },
	{ V568_REGTYPE, "V5_REG_ISP_CTL_AUTO_H", V5_REG_ISP_CTL_AUTO_H, 0, 0, "Auto-function control register:[10] AWB window control;\n[9] AWB reverse mode;\n[8] AWB function on/off" },
	{ V568_REGTYPE, "V5_REG_ISP_YBOT", V5_REG_ISP_YBOT, 0, 0, "Y limit of AWB register\n[15-8] Y top value,[7-0] Y bottom value" },
	{ V568_REGTYPE, "V5_REG_ISP_YTOP", V5_REG_ISP_YTOP, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_QTOP", V5_REG_ISP_QTOP, 0, 0, "IQ limit of AWB register\n[15-8] I top value,[7-0] Q top value" },
	{ V568_REGTYPE, "V5_REG_ISP_ITOP", V5_REG_ISP_ITOP, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_GLOW", V5_REG_ISP_GLOW, 0, 0, "RB gain limit of AWB register\n[15-8] RB gain value max,[7-0] RB gain value min" },
	{ V568_REGTYPE, "V5_REG_ISP_GTOP", V5_REG_ISP_GTOP, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AWBCTRL", V5_REG_ISP_AWBCTRL, 0, 0, "[15-10] Awb threshold2;\n[9-6] Awb threshold1;\n[5-0] AWB ADJUST IN LARGER STEP" },
	{ V568_REGTYPE, "V5_REG_ISP_AWBCTRL_H", V5_REG_ISP_AWBCTRL_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_RMEAN", V5_REG_ISP_RMEAN, 0, 0, "Awb means register" },
	{ V568_REGTYPE, "V5_REG_ISP_GMEAN", V5_REG_ISP_GMEAN, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BMEAN", V5_REG_ISP_BMEAN, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_YMEAN", V5_REG_ISP_YMEAN, 0, 0, "Y mean register" },
	{ V568_REGTYPE, "V5_REG_ISP_AUTO_STATUS", V5_REG_ISP_AUTO_STATUS, 0, 0, "Auto-function status register: \n[3]  1 awb valid \n[2] 1 B mean > G mean , otherwise 0;\n[1] 1 R mean > G mean , otherwise 0;\n[0] RG gain reach limitation both." },
	{ V568_REGTYPE, "V5_REG_ISP_DPDTHD", V5_REG_ISP_DPDTHD, 0, 0, "DPD threshold register" },
	{ V568_REGTYPE, "V5_REG_ISP_NT0", V5_REG_ISP_NT0, 0, 0, "Noise table register" },
	{ V568_REGTYPE, "V5_REG_ISP_NT1", V5_REG_ISP_NT1, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT2", V5_REG_ISP_NT2, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT3", V5_REG_ISP_NT3, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT4", V5_REG_ISP_NT4, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT5", V5_REG_ISP_NT5, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT6", V5_REG_ISP_NT6, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT7", V5_REG_ISP_NT7, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT8", V5_REG_ISP_NT8, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT9", V5_REG_ISP_NT9, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT10", V5_REG_ISP_NT10, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT11", V5_REG_ISP_NT11, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT12", V5_REG_ISP_NT12, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT13", V5_REG_ISP_NT13, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT14", V5_REG_ISP_NT14, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT15", V5_REG_ISP_NT15, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_NT16", V5_REG_ISP_NT16, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_DPDThd_UV", V5_REG_ISP_DPDThd_UV, 0, 0, "DPD_UV threshold register" },
	{ V568_REGTYPE, "V5_REG_ISP_NT0_UV", V5_REG_ISP_NT0_UV, 0, 0, "Noise table register" },
	{ V568_REGTYPE, "V5_REG_ISP_YUV_SIF_EN", V5_REG_ISP_YUV_SIF_EN, 0, 0, "When YUV_SIF_EN is set to 1,the YUV format data is input to the isp module " },
	{ V568_REGTYPE, "V5_REG_ISP_HIS_CTRL", V5_REG_ISP_HIS_CTRL, 0, 0, "HIS_CTRL[0] :histogram_en. HIS_CTRL[1]: histogram_effect" },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_GAIN_MANUAL", V5_REG_ISP_HISTOGRAM_GAIN_MANUAL, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_Q_HISTOGRAM_L", V5_REG_ISP_Q_HISTOGRAM_L, 0, 0, "Q_histogram is the number which is 1% or so of the pixel number of whole frame" },
	{ V568_REGTYPE, "V5_REG_ISP_Q_HISTOGRAM_M", V5_REG_ISP_Q_HISTOGRAM_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_Q_HISTOGRAM_H", V5_REG_ISP_Q_HISTOGRAM_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_X_CUR", V5_REG_ISP_X_CUR, 0, 0, "this is the  histogram compensation point of last frame data" },
	{ V568_REGTYPE, "V5_REG_ISP_X_AVG", V5_REG_ISP_X_AVG, 0, 0, "weighted average value of last three frame data. This value will take effect if histogram_effect bit is enabled" },
	{ V568_REGTYPE, "V5_REG_ISP_BL_B_OFFSET", V5_REG_ISP_BL_B_OFFSET, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BL_R_OFFSET", V5_REG_ISP_BL_R_OFFSET, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BL_G1_OFFSET", V5_REG_ISP_BL_G1_OFFSET, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_BL_G2_OFFSET", V5_REG_ISP_BL_G2_OFFSET, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AUTO_FOCUS_EN", V5_REG_ISP_AUTO_FOCUS_EN, 0, 0, "Bit[0]: auto focus enable"},
	{ V568_REGTYPE, "V5_REG_ISP_EDGE_SUM_L", V5_REG_ISP_EDGE_SUM_L, 0, 0, "If a picture is in focus, the sum of it¡¯s edge-map data is biggest" },
	{ V568_REGTYPE, "V5_REG_ISP_EDGE_SUM_M", V5_REG_ISP_EDGE_SUM_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_EDGE_SUM_M2", V5_REG_ISP_EDGE_SUM_M2, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_EDGE_SUM_H", V5_REG_ISP_EDGE_SUM_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AE_WT0", V5_REG_ISP_AE_WT0, 0, 0, "weight of each window" },
	{ V568_REGTYPE, "V5_REG_ISP_AE_WT0_13", V5_REG_ISP_AE_WT0_13, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AE_WT0_21", V5_REG_ISP_AE_WT0_21, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AE_WT0_23", V5_REG_ISP_AE_WT0_23, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AE_WT0_31", V5_REG_ISP_AE_WT0_31, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AE_WT0_33", V5_REG_ISP_AE_WT0_33, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AE_WT0_41", V5_REG_ISP_AE_WT0_41, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AE_WT0_43", V5_REG_ISP_AE_WT0_43, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN", V5_REG_ISP_WIN_YMEAN, 0, 0, "y mean of each window" },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_12", V5_REG_ISP_WIN_YMEAN_12, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_13", V5_REG_ISP_WIN_YMEAN_13, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_14", V5_REG_ISP_WIN_YMEAN_14, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_21", V5_REG_ISP_WIN_YMEAN_21, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_22", V5_REG_ISP_WIN_YMEAN_22, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_23", V5_REG_ISP_WIN_YMEAN_23, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_24", V5_REG_ISP_WIN_YMEAN_24, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_31", V5_REG_ISP_WIN_YMEAN_31, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_32", V5_REG_ISP_WIN_YMEAN_32, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_33", V5_REG_ISP_WIN_YMEAN_33, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_34", V5_REG_ISP_WIN_YMEAN_34, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_41", V5_REG_ISP_WIN_YMEAN_41, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_42", V5_REG_ISP_WIN_YMEAN_42, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_43", V5_REG_ISP_WIN_YMEAN_43, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_YMEAN_44", V5_REG_ISP_WIN_YMEAN_44, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN", V5_REG_ISP_WIN_IMEAN, 0, 0, "i mean of each window" },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_12", V5_REG_ISP_WIN_IMEAN_12, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_13", V5_REG_ISP_WIN_IMEAN_13, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_14", V5_REG_ISP_WIN_IMEAN_14, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_21", V5_REG_ISP_WIN_IMEAN_21, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_22", V5_REG_ISP_WIN_IMEAN_22, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_23", V5_REG_ISP_WIN_IMEAN_23, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_24", V5_REG_ISP_WIN_IMEAN_24, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_31", V5_REG_ISP_WIN_IMEAN_31, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_32", V5_REG_ISP_WIN_IMEAN_32, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_33", V5_REG_ISP_WIN_IMEAN_33, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_34", V5_REG_ISP_WIN_IMEAN_34, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_41", V5_REG_ISP_WIN_IMEAN_41, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_42", V5_REG_ISP_WIN_IMEAN_42, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_43", V5_REG_ISP_WIN_IMEAN_43, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_IMEAN_44", V5_REG_ISP_WIN_IMEAN_44, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN", V5_REG_ISP_WIN_QMEAN, 0, 0, "q mean of each window" },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_12", V5_REG_ISP_WIN_QMEAN_12, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_13", V5_REG_ISP_WIN_QMEAN_13, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_14", V5_REG_ISP_WIN_QMEAN_14, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_21", V5_REG_ISP_WIN_QMEAN_21, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_22", V5_REG_ISP_WIN_QMEAN_22, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_23", V5_REG_ISP_WIN_QMEAN_23, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_24", V5_REG_ISP_WIN_QMEAN_24, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_31", V5_REG_ISP_WIN_QMEAN_31, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_32", V5_REG_ISP_WIN_QMEAN_32, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_33", V5_REG_ISP_WIN_QMEAN_33, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_34", V5_REG_ISP_WIN_QMEAN_34, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_41", V5_REG_ISP_WIN_QMEAN_41, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_42", V5_REG_ISP_WIN_QMEAN_42, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_43", V5_REG_ISP_WIN_QMEAN_43, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_WIN_QMEAN_44", V5_REG_ISP_WIN_QMEAN_44, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AHSTART_A", V5_REG_ISP_AHSTART_A, 0, 0, "window station setting" },
	{ V568_REGTYPE, "V5_REG_ISP_AHSTART_B", V5_REG_ISP_AHSTART_B, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AHSTART_C", V5_REG_ISP_AHSTART_C, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AHSTART_D", V5_REG_ISP_AHSTART_D, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AHSTART_E", V5_REG_ISP_AHSTART_E, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AVSTART_A", V5_REG_ISP_AVSTART_A, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AVSTART_B", V5_REG_ISP_AVSTART_B, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AVSTART_C", V5_REG_ISP_AVSTART_C, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AVSTART_D", V5_REG_ISP_AVSTART_D, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_AVSTART_E", V5_REG_ISP_AVSTART_E, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT0_L", V5_REG_ISP_HISTOGRAM_RESULT0_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT0_M", V5_REG_ISP_HISTOGRAM_RESULT0_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT0_H", V5_REG_ISP_HISTOGRAM_RESULT0_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT1_L", V5_REG_ISP_HISTOGRAM_RESULT1_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT1_M", V5_REG_ISP_HISTOGRAM_RESULT1_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT1_H", V5_REG_ISP_HISTOGRAM_RESULT1_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT2_L", V5_REG_ISP_HISTOGRAM_RESULT2_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT2_M", V5_REG_ISP_HISTOGRAM_RESULT2_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT2_H", V5_REG_ISP_HISTOGRAM_RESULT2_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT3_L", V5_REG_ISP_HISTOGRAM_RESULT3_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT3_M", V5_REG_ISP_HISTOGRAM_RESULT3_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT3_H", V5_REG_ISP_HISTOGRAM_RESULT3_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT4_L", V5_REG_ISP_HISTOGRAM_RESULT4_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT4_M", V5_REG_ISP_HISTOGRAM_RESULT4_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT4_H", V5_REG_ISP_HISTOGRAM_RESULT4_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT5_L", V5_REG_ISP_HISTOGRAM_RESULT5_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT5_M", V5_REG_ISP_HISTOGRAM_RESULT5_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT5_H", V5_REG_ISP_HISTOGRAM_RESULT5_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT6_L", V5_REG_ISP_HISTOGRAM_RESULT6_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT6_M", V5_REG_ISP_HISTOGRAM_RESULT6_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT6_H", V5_REG_ISP_HISTOGRAM_RESULT6_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT7_L", V5_REG_ISP_HISTOGRAM_RESULT7_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT7_M", V5_REG_ISP_HISTOGRAM_RESULT7_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT7_H", V5_REG_ISP_HISTOGRAM_RESULT7_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT8_L", V5_REG_ISP_HISTOGRAM_RESULT8_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT8_M", V5_REG_ISP_HISTOGRAM_RESULT8_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT8_H", V5_REG_ISP_HISTOGRAM_RESULT8_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT9_L", V5_REG_ISP_HISTOGRAM_RESULT9_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT9_M", V5_REG_ISP_HISTOGRAM_RESULT9_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT9_H", V5_REG_ISP_HISTOGRAM_RESULT9_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT10_L", V5_REG_ISP_HISTOGRAM_RESULT10_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT10_M", V5_REG_ISP_HISTOGRAM_RESULT10_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT10_H", V5_REG_ISP_HISTOGRAM_RESULT10_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT11_L", V5_REG_ISP_HISTOGRAM_RESULT11_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT11_M", V5_REG_ISP_HISTOGRAM_RESULT11_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULT11_H", V5_REG_ISP_HISTOGRAM_RESULT11_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTC0_L", V5_REG_ISP_HISTOGRAM_RESULTC0_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTC0_M", V5_REG_ISP_HISTOGRAM_RESULTC0_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTC0_H", V5_REG_ISP_HISTOGRAM_RESULTC0_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTC4_L", V5_REG_ISP_HISTOGRAM_RESULTC4_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTC4_M", V5_REG_ISP_HISTOGRAM_RESULTC4_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTC4_H", V5_REG_ISP_HISTOGRAM_RESULTC4_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTC8_L", V5_REG_ISP_HISTOGRAM_RESULTC8_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTC8_M", V5_REG_ISP_HISTOGRAM_RESULTC8_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTC8_H", V5_REG_ISP_HISTOGRAM_RESULTC8_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTCC_L", V5_REG_ISP_HISTOGRAM_RESULTCC_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTCC_M", V5_REG_ISP_HISTOGRAM_RESULTCC_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTCC_H", V5_REG_ISP_HISTOGRAM_RESULTCC_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTD0_L", V5_REG_ISP_HISTOGRAM_RESULTD0_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTD0_M", V5_REG_ISP_HISTOGRAM_RESULTD0_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTD0_H", V5_REG_ISP_HISTOGRAM_RESULTD0_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTD4_L", V5_REG_ISP_HISTOGRAM_RESULTD4_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTD4_M", V5_REG_ISP_HISTOGRAM_RESULTD4_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTD4_H", V5_REG_ISP_HISTOGRAM_RESULTD4_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTD8_L", V5_REG_ISP_HISTOGRAM_RESULTD8_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTD8_M", V5_REG_ISP_HISTOGRAM_RESULTD8_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTD8_H", V5_REG_ISP_HISTOGRAM_RESULTD8_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTDC_L", V5_REG_ISP_HISTOGRAM_RESULTDC_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTDC_M", V5_REG_ISP_HISTOGRAM_RESULTDC_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTDC_H", V5_REG_ISP_HISTOGRAM_RESULTDC_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTE0_L", V5_REG_ISP_HISTOGRAM_RESULTE0_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTE0_M", V5_REG_ISP_HISTOGRAM_RESULTE0_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTE0_H", V5_REG_ISP_HISTOGRAM_RESULTE0_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTE4_L", V5_REG_ISP_HISTOGRAM_RESULTE4_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTE4_M", V5_REG_ISP_HISTOGRAM_RESULTE4_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTE4_H", V5_REG_ISP_HISTOGRAM_RESULTE4_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTE8_L", V5_REG_ISP_HISTOGRAM_RESULTE8_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTE8_M", V5_REG_ISP_HISTOGRAM_RESULTE8_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTE8_H", V5_REG_ISP_HISTOGRAM_RESULTE8_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTEC_L", V5_REG_ISP_HISTOGRAM_RESULTEC_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTEC_M", V5_REG_ISP_HISTOGRAM_RESULTEC_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTEC_H", V5_REG_ISP_HISTOGRAM_RESULTEC_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTF0_L", V5_REG_ISP_HISTOGRAM_RESULTF0_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTF0_M", V5_REG_ISP_HISTOGRAM_RESULTF0_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTF0_H", V5_REG_ISP_HISTOGRAM_RESULTF0_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTF4_L", V5_REG_ISP_HISTOGRAM_RESULTF4_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTF4_M", V5_REG_ISP_HISTOGRAM_RESULTF4_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTF4_H", V5_REG_ISP_HISTOGRAM_RESULTF4_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTF8_L", V5_REG_ISP_HISTOGRAM_RESULTF8_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTF8_M", V5_REG_ISP_HISTOGRAM_RESULTF8_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTF8_H", V5_REG_ISP_HISTOGRAM_RESULTF8_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTFC_L", V5_REG_ISP_HISTOGRAM_RESULTFC_L, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTFC_M", V5_REG_ISP_HISTOGRAM_RESULTFC_M, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_HISTOGRAM_RESULTFC_H", V5_REG_ISP_HISTOGRAM_RESULTFC_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_ISP_Y_MEAN_TARGET", V5_REG_ISP_Y_MEAN_TARGET, 0, 0, "y mean target" },
	{ V568_REGTYPE, "V5_REG_ISP_Y_MEAN_THD", V5_REG_ISP_Y_MEAN_THD, 0, 0, "y mean threshold" }
};

static const TRegUnit gIppReg[] =
{
	{ V568_REGTYPE, "V5_REG_IPP_SPECTRL", V5_REG_IPP_SPECTRL,	0, 0, "2'b[5:4]: IPP working mode.\n3'b[3:1]: Special effect sel.\n1'b[0]: Special effect enable." },
	{ V568_REGTYPE, "V5_REG_IPP_SIZCTRL", V5_REG_IPP_SIZCTRL,	0, 0, "1'b[7]0:  capture or decoder without frame,1:  ~ with frame\n2'b[6:5]: Input image data select:\n(00: LUBF,01:SIF,10:ISP,11: reserved)\n1'b[4]: Software reset signal of IPP module.\n(1: reset all the internal registers except control registers when written to 1¡¯b1\ndose not reset )\n1'b[3]: Prefilter enable bit(1: enable,0:disable).\n1'b[2]: Display sizer enable bit(1: enable,0:disable).\n1'b[1]: Capture sizer enable bit(1: enable,0:disable).\n1'b[0]: Thumbnail sizer enable bit." },
	{ V568_REGTYPE, "V5_REG_IPP_IMGWD", V5_REG_IPP_IMGWD,		0, 0, "12'b[11:0]: Width of the input image." },
	{ V568_REGTYPE, "V5_REG_IPP_IMGWD_H", V5_REG_IPP_IMGWD_H,	0, 0, "4'b[15:12]: Reserved." },
	{ V568_REGTYPE, "V5_REG_IPP_IMGHT", V5_REG_IPP_IMGHT,		0, 0, "12'b[11:0]: Height of the input image." },
	{ V568_REGTYPE, "V5_REG_IPP_IMGHT_H", V5_REG_IPP_IMGHT_H,	0, 0, "4'b[15:12]: Reserved." },
	{ V568_REGTYPE, "V5_REG_IPP_SIZWD", V5_REG_IPP_SIZWD,		0, 0, "12'b[11:0]: Width of the image window." },
	{ V568_REGTYPE, "V5_REG_IPP_SIZWD_H", V5_REG_IPP_SIZWD_H,	0, 0, "4'b[15:12]: Reserved." },
	{ V568_REGTYPE, "V5_REG_IPP_SIZHT", V5_REG_IPP_SIZHT,		0, 0, "12'b[11:0]: Height of the image window." },
	{ V568_REGTYPE, "V5_REG_IPP_SIZHT_H", V5_REG_IPP_SIZHT_H,	0, 0, "4'b[15:12]: Reserved." },
	{ V568_REGTYPE, "V5_REG_IPP_SIZSTX", V5_REG_IPP_SIZSTX,		0, 0, "12'b[11:0]: Horizontal coordinate of window start pixel." },
	{ V568_REGTYPE, "V5_REG_IPP_SIZSTX_H", V5_REG_IPP_SIZSTX_H, 0, 0, "4'b[15:12]: Reserved." },
	{ V568_REGTYPE, "V5_REG_IPP_SIZSTY", V5_REG_IPP_SIZSTY,		0, 0, "12'b[11:0]: Vertical coordinate of window start pixel." },
	{ V568_REGTYPE, "V5_REG_IPP_SIZSTY_H", V5_REG_IPP_SIZSTY_H, 0, 0, "4'b[15:12]: Reserved." },
	{ V568_REGTYPE, "V5_REG_IPP_DISWD", V5_REG_IPP_DISWD,		0, 0, "10'b[9:0] : Width of the output image from the display sizer." },
	{ V568_REGTYPE, "V5_REG_IPP_DISWD_H", V5_REG_IPP_DISWD_H,	0, 0, "6'b[15:10]: Reserved." },
	{ V568_REGTYPE, "V5_REG_IPP_DISHT", V5_REG_IPP_DISHT,		0, 0, "10'b[9:0] : Height of the output image from the display sizer." },
	{ V568_REGTYPE, "V5_REG_IPP_DISHT_H", V5_REG_IPP_DISHT_H,	0, 0, "6'b[15:10]: Reserved." },
	{ V568_REGTYPE, "V5_REG_IPP_DISHRATIO", V5_REG_IPP_DISHRATIO,		0, 0, "10'b[9:0] : Fraction part of the display horizontal ratio." },
	{ V568_REGTYPE, "V5_REG_IPP_DISHRATIO_H", V5_REG_IPP_DISHRATIO_H,	0, 0, "6'b[15:10]: Integer part of the display horizontal ratio." },
	{ V568_REGTYPE, "V5_REG_IPP_DISVRATIO", V5_REG_IPP_DISVRATIO,		0, 0, "10'b[9:0] : Fraction part of the display vertical ratio." },
	{ V568_REGTYPE, "V5_REG_IPP_DISVRATIO_H", V5_REG_IPP_DISVRATIO_H,	0, 0, "6'b[15:10]: Integer part of the display vertical ratio." },
	{ V568_REGTYPE, "V5_REG_IPP_CAPWD", V5_REG_IPP_CAPWD,				0, 0, "10'b[9:0] : Width of the output image from the capture sizer." },
	{ V568_REGTYPE, "V5_REG_IPP_CAPWD_H", V5_REG_IPP_CAPWD_H,			0, 0, "6'b[15:10]: Reserved." },
	{ V568_REGTYPE, "V5_REG_IPP_CAPHT", V5_REG_IPP_CAPHT,				0, 0, "10'b[9:0] : Height of the output image from the capture sizer." },
	{ V568_REGTYPE, "V5_REG_IPP_CAPHT_H", V5_REG_IPP_CAPHT_H,			0, 0, "6'b[15:10]: Reserved." },
	{ V568_REGTYPE, "V5_REG_IPP_CAPHRATIO", V5_REG_IPP_CAPHRATIO,		0, 0, "10'b[9:0] : Integer part of the capture horizontal ratio." },
	{ V568_REGTYPE, "V5_REG_IPP_CAPHRATIO_H", V5_REG_IPP_CAPHRATIO_H,	0, 0, "6'b[15:10]: Fraction part of the capture horizontal ratio." },
	{ V568_REGTYPE, "V5_REG_IPP_CAPVRATIO", V5_REG_IPP_CAPVRATIO,		0, 0, "10'b[9:0] : Integer part of the capture vertical ratio." },
	{ V568_REGTYPE, "V5_REG_IPP_CAPVRATIO_H", V5_REG_IPP_CAPVRATIO_H,	0, 0, "6'b[15:10]: Fraction part of the capture vertical ratio." },
	{ V568_REGTYPE, "V5_REG_IPP_THUMBNAILWD", V5_REG_IPP_THUMBNAILWD,	0, 0, "8'b[7:0] : Thumbnail width." },
	{ V568_REGTYPE, "V5_REG_IPP_THUMBNAILHT", V5_REG_IPP_THUMBNAILHT,	0, 0, "8'b[15:8]: Thumbnail height." },
	{ V568_REGTYPE, "V5_REG_IPP_THUMBNAILRATIO", V5_REG_IPP_THUMBNAILRATIO, 0, 0, "8'b[7:0] : Thumbnail sizer ratio." },
	{ V568_REGTYPE, "V5_REG_IPP_FIRCF", V5_REG_IPP_FIRCF,			0, 0, "Prefilter coefficient 0." },
	{ V568_REGTYPE, "V5_REG_IPP_FIRCF_1", V5_REG_IPP_FIRCF_1,		0, 0, "Prefilter coefficient 1." },
	{ V568_REGTYPE, "V5_REG_IPP_FIRCF_2", V5_REG_IPP_FIRCF_2,		0, 0, "Prefilter coefficient 2." },
	{ V568_REGTYPE, "V5_REG_IPP_FIRCF_3", V5_REG_IPP_FIRCF_3,		0, 0, "Prefilter coefficient 3." },
	{ V568_REGTYPE, "V5_REG_IPP_PIXRATE", V5_REG_IPP_PIXRATE,		0, 0, "2'b[7:6]: Reserved.\n6'b[5:0]: PIXEL_RATE" },
	{ V568_REGTYPE, "V5_REG_IPP_HBLANK",  V5_REG_IPP_HBLANK,		0, 0, "16'b[15:0]: Horizontal blank time." },
	{ V568_REGTYPE, "V5_REG_IPP_HBLANK_H",  V5_REG_IPP_HBLANK_H,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_UOFFSET", V5_REG_UOFFSET,				0, 0, "8'b[7:0] : U offset for sephia effect." },
	{ V568_REGTYPE, "V5_REG_VOFFSET", V5_REG_VOFFSET,				0, 0, "8'b[15:8]: V offset for sephia effect." },
	{ V568_REGTYPE, "V5_REG_YOFFSET", V5_REG_YOFFSET,				0, 0, "" },
	{ V568_REGTYPE, "V5_REG_UUPTHRS", V5_REG_UUPTHRS,				0, 0, "8'b[7:0]  : U up threshold value for special color effect." },
	{ V568_REGTYPE, "V5_REG_UDWTHRS", V5_REG_UDWTHRS,				0, 0, "8'b[15:8] : U down threshold value for special color effect." },
	{ V568_REGTYPE, "V5_REG_VUPTHRS", V5_REG_VUPTHRS,				0, 0, "8'b[23:16]: V up threshold value for special color effect." },
	{ V568_REGTYPE, "V5_REG_VDWTHRS", V5_REG_VDWTHRS,				0, 0, "8'b[31:24]: V down threshold value for special color effect." },
	{ V568_REGTYPE, "V5_REG_FRMDP", V5_REG_FRMDP,					0, 0, "16'b[15:0]: Frame drop." },
	{ V568_REGTYPE, "V5_REG_FRMDP_H", V5_REG_FRMDP_H,				0, 0, "" }
};

static const TRegUnit gLcdIFReg[] =
{
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_RS_FLAG_L",	V5_REG_LCDIF_HEAD_RS_FLAG_L,	0, 0, "RS signal value when sending head data." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_RS_FLAG_H",	V5_REG_LCDIF_HEAD_RS_FLAG_H,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_NUM_L",		V5_REG_LCDIF_HEAD_NUM_L,		0, 0, "Head number." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_NUM_H",		V5_REG_LCDIF_HEAD_NUM_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_START_X_POS_L",	V5_REG_LCDIF_START_X_POS_L,		0, 0, "Start X position in HEAD_DATA register group." },
	{ V568_REGTYPE, "V5_REG_LCDIF_START_X_POS_H",	V5_REG_LCDIF_START_X_POS_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_START_Y_POS_L",	V5_REG_LCDIF_START_Y_POS_L,		0, 0, "Start Y position in HEAD_DATA register group." },
	{ V568_REGTYPE, "V5_REG_LCDIF_START_Y_POS_H",	V5_REG_LCDIF_START_Y_POS_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_END_X_POS_L",		V5_REG_LCDIF_END_X_POS_L,		0, 0, "End X position in HEAD_DATA register group." },
	{ V568_REGTYPE, "V5_REG_LCDIF_END_X_POS_H",		V5_REG_LCDIF_END_X_POS_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_END_Y_POS_L",		V5_REG_LCDIF_END_Y_POS_L,		0, 0, "End Y position in HEAD_DATA register group." },
	{ V568_REGTYPE, "V5_REG_LCDIF_END_Y_POS_H",		V5_REG_LCDIF_END_Y_POS_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_CONFIG_L",	V5_REG_LCDIF_HEAD_CONFIG_L,		0, 0, "1'b[0]:Head enable when set 1;\n1'b[3]:Update position data to register." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_CONFIG_H",	V5_REG_LCDIF_HEAD_CONFIG_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_CONFIG_L",		V5_REG_LCDIF_CONFIG_L,			0, 0, "1'b[3]:RS high enable;\n1'b[5]:Bus select." },
	{ V568_REGTYPE, "V5_REG_LCDIF_CONFIG_H",		V5_REG_LCDIF_CONFIG_H,			0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_LCD_RESET",		V5_REG_LCDIF_LCD_RESET,			0, 0, "1'b[0]:Lcd reset signal, low active." },
	{ V568_REGTYPE, "V5_REG_LCDIF_PAD_L",			V5_REG_LCDIF_PAD_L,				0, 0, "Data PAD." },
	{ V568_REGTYPE, "V5_REG_LCDIF_PAD_H",			V5_REG_LCDIF_PAD_H,				0, 0, "1'b[8]: PAD enable." },
	{ V568_REGTYPE, "V5_REG_LCDIF_WCONT_L",			V5_REG_LCDIF_WCONT_L,			0, 0, "5'b[4:0]:WSC (Write Set up Cycle);\n5'b[9:5]:WRC (Write Data Cycle)" },
	{ V568_REGTYPE, "V5_REG_LCDIF_WCONT_H",			V5_REG_LCDIF_WCONT_H,			0, 0, "5'b[14:10]:DHC (Data Hold Cycle)" },
	{ V568_REGTYPE, "V5_REG_LCDIF_RCONT_L",			V5_REG_LCDIF_RCONT_L,			0, 0, "5'b[4:0]:RSC (Read Set up Cycle);\n5'b[9:5]:RAC (Read Access Cycle)" },
	{ V568_REGTYPE, "V5_REG_LCDIF_RCONT_H",			V5_REG_LCDIF_RCONT_H,			0, 0, "5'b[14:10]:ROC (Read Off Cycle)" },
	{ V568_REGTYPE, "V5_REG_LCDIF_EXW_EN",			V5_REG_LCDIF_EXW_EN,			0, 0, "1'b[0]:Send EXW0 to LCD bus;\n1'b[1]:Send EXW1 to LCD bus." },
	{ V568_REGTYPE, "V5_REG_LCDIF_EXW0_L",			V5_REG_LCDIF_EXW0_L,			0, 0, "Data to be output when RS is low." },
	{ V568_REGTYPE, "V5_REG_LCDIF_EXW0_H",			V5_REG_LCDIF_EXW0_H,			0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_EXW1_L",			V5_REG_LCDIF_EXW1_L,			0, 0, "Data to be output when RS is high." },
	{ V568_REGTYPE, "V5_REG_LCDIF_EXW1_H",			V5_REG_LCDIF_EXW1_H,			0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_EXR0_L",			V5_REG_LCDIF_EXR0_L,			0, 0, "Read current data on DIS_D[15:0]." },
	{ V568_REGTYPE, "V5_REG_LCDIF_EXR0_H",			V5_REG_LCDIF_EXR0_H,			0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_EXRS",			V5_REG_LCDIF_EXRS,				0, 0, "1'b[0]: Read data when RS keep high/low." },
	{ V568_REGTYPE, "V5_REG_LCDIF_SER_COMM_L",		V5_REG_LCDIF_SER_COMM_L,		0, 0, "Serial transfers command." },
	{ V568_REGTYPE, "V5_REG_LCDIF_SER_COMM_H",		V5_REG_LCDIF_SER_COMM_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_SER_DATA_L",		V5_REG_LCDIF_SER_DATA_L,		0, 0, "Serial transfers data." },
	{ V568_REGTYPE, "V5_REG_LCDIF_SER_DATA_H",		V5_REG_LCDIF_SER_DATA_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_SER_NUM_L",		V5_REG_LCDIF_SER_NUM_L,			0, 0, "Serial transfers data bit number." },
	{ V568_REGTYPE, "V5_REG_LCDIF_SER_NUM_H",		V5_REG_LCDIF_SER_NUM_H,			0, 0, "Serial transfers command bit number." },
	{ V568_REGTYPE, "V5_REG_LCDIF_SER_SEND",		V5_REG_LCDIF_SER_SEND,			0, 0, "Send the serial data when sent 1." },
	{ V568_REGTYPE, "V5_REG_LCDIF_SCK_WIDTH",		V5_REG_LCDIF_SCK_WIDTH,			0, 0, "Set the SCK width, unit is the main clock width." },
	{ V568_REGTYPE, "V5_REG_LCDIF_A0_SEL",			V5_REG_LCDIF_A0_SEL,			0, 0, "The A0 is low level when sending the serial command, else is high level." },

	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA0",		V5_REG_LCDIF_HEAD_DATA0,		0, 0, "Head data 0." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA0_H",	V5_REG_LCDIF_HEAD_DATA0_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA1",		V5_REG_LCDIF_HEAD_DATA1,		0, 0, "Head data 1." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA1_H",	V5_REG_LCDIF_HEAD_DATA1_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA2",		V5_REG_LCDIF_HEAD_DATA2,		0, 0, "Head data 2." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA2_H",	V5_REG_LCDIF_HEAD_DATA2_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA3",		V5_REG_LCDIF_HEAD_DATA3,		0, 0, "Head data 3." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA3_H",	V5_REG_LCDIF_HEAD_DATA3_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA4",		V5_REG_LCDIF_HEAD_DATA4,		0, 0, "Head data 4." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA4_H",	V5_REG_LCDIF_HEAD_DATA4_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA5",		V5_REG_LCDIF_HEAD_DATA5,		0, 0, "Head data 5." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA5_H",	V5_REG_LCDIF_HEAD_DATA5_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA6",		V5_REG_LCDIF_HEAD_DATA6,		0, 0, "Head data 6." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA6_H",	V5_REG_LCDIF_HEAD_DATA6_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA7",		V5_REG_LCDIF_HEAD_DATA7,		0, 0, "Head data 7." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA7_H",	V5_REG_LCDIF_HEAD_DATA7_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA8",		V5_REG_LCDIF_HEAD_DATA8,		0, 0, "Head data 8." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA8_H",	V5_REG_LCDIF_HEAD_DATA8_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA9",		V5_REG_LCDIF_HEAD_DATA9,		0, 0, "Head data 9." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA9_H",	V5_REG_LCDIF_HEAD_DATA9_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA10",		V5_REG_LCDIF_HEAD_DATA10,		0, 0, "Head data 10." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA10_H",	V5_REG_LCDIF_HEAD_DATA10_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA11",		V5_REG_LCDIF_HEAD_DATA11,		0, 0, "Head data 11." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA11_H",	V5_REG_LCDIF_HEAD_DATA11_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA12",		V5_REG_LCDIF_HEAD_DATA12,		0, 0, "Head data 12." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA12_H",	V5_REG_LCDIF_HEAD_DATA12_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA13",		V5_REG_LCDIF_HEAD_DATA13,		0, 0, "Head data 13." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA13_H",	V5_REG_LCDIF_HEAD_DATA13_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA14",		V5_REG_LCDIF_HEAD_DATA14,		0, 0, "Head data 14." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA14_H",	V5_REG_LCDIF_HEAD_DATA14_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA15",		V5_REG_LCDIF_HEAD_DATA15,		0, 0, "Head data 15." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_DATA15_H",	V5_REG_LCDIF_HEAD_DATA15_H,		0, 0, "" },

	{ V568_REGTYPE, "V5_REG_LCDIF_BIAS_X",			V5_REG_LCDIF_BIAS_X,			0, 0, "X bias value." },
	{ V568_REGTYPE, "V5_REG_LCDIF_BIAS_X_H",		V5_REG_LCDIF_BIAS_X_H,			0, 0, "1'b[8]: One half of  x start address is sent ." },
	{ V568_REGTYPE, "V5_REG_LCDIF_BIAS_Y",			V5_REG_LCDIF_BIAS_Y,			0, 0, "Y bias value." },
	{ V568_REGTYPE, "V5_REG_LCDIF_BIAS_Y_H",		V5_REG_LCDIF_BIAS_Y_H,			0, 0, "1'b[8]: One half of  y start address is sent ." },
	{ V568_REGTYPE, "V5_REG_LCDIF_DMAP",			V5_REG_LCDIF_DMAP,				0, 0, "4'b[3:0]: Data Format;\n3'b[6-4]: Mapping Pattern;\n1'b[7]: Exchange the data[7:0] to data[15:8]." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_CS_MODE_L",	V5_REG_LCDIF_HEAD_CS_MODE_L,	0, 0, "1'b[0]: CS signal equal to the head_cs_flag / RS signal." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_CS_MODE_H",	V5_REG_LCDIF_HEAD_CS_MODE_H,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_CS_FLAG_L",	V5_REG_LCDIF_HEAD_CS_FLAG_L,	0, 0, "CS signal data when sending head data." },
	{ V568_REGTYPE, "V5_REG_LCDIF_HEAD_CS_FLAG_H",	V5_REG_LCDIF_HEAD_CS_FLAG_H,	0, 0, "" }
};

static const TRegUnit gJpegReg[] =
{
	{ V568_REGTYPE, "V5_REG_JPEG_JPEG_MODE		",		V5_REG_JPEG_JPEG_MODE		,			0,	0,	"JPEG mode register,\n[6]: avi format enable\n[5]: use custom Huffman table\n[4]: use same quantization table\n[3]: use custom quantization table\n[2]: simple header enable\n[1:0]: working mode:0-capture,0-display,0-encode,0-decode"},
	{ V568_REGTYPE, "V5_REG_JPEG_JPEG_CTRL		",		V5_REG_JPEG_JPEG_CTRL		,			0,	0,	"JPEG control register,\n[7:6]: huffman table select\n[5]: start writing Huffman table\n[4]: start writing quantization table\n[3]: reset jpeg state machine to idle state\n[2]: restart decode\n[1]: start decode\n[0]: start jpeg encode"},
	{ V568_REGTYPE, "V5_REG_JPEG_JPEG_STATUS	",		V5_REG_JPEG_JPEG_STATUS		,			0,	0,	"JPEG status register,\n[7:5]: p_state,0-IDLE, 1-INIT, 2-HEAD, 3-FEEDTHROUGH_HEAD 4-ACT, 5-DRAIN\n[4]: encode error flag\n[3]: header done\n[2]: Decode error flag\n[1]: decode done\n[0]: encode done"},
	{ V568_REGTYPE, "V5_REG_JPEG_BRC			",		V5_REG_JPEG_BRC				,			0,	0,	"Bit rate control register\n[7]: auto bit rate control enable\n[6:0]: initial Q factor"},
	{ V568_REGTYPE, "V5_REG_JPEG_TCR			",		V5_REG_JPEG_TCR				,			0,	0,	"Target compression ratio, ratio = (tcr-1)/4"},
	{ V568_REGTYPE, "V5_REG_JPEG_QF				",		V5_REG_JPEG_QF				,			0,	0,	"Q factor of current image\nIt is a read only register"},
	{ V568_REGTYPE, "V5_REG_JPEG_HEADER_STEP	",		V5_REG_JPEG_HEADER_STEP		,			0,	0,	"Header step register[3:0]\nThe default value is 03H."},
	{ V568_REGTYPE, "V5_REG_JPEG_JPEG_RESERVED	",		V5_REG_JPEG_JPEG_RESERVED	,			0,	0,	"Jpeg reserved register[7:0]"},
	{ V568_REGTYPE, "V5_REG_JPEG_TARGET_WC_0	",		V5_REG_JPEG_TARGET_WC_0		,			0,	0,	"Target word count[31:24](not use)"},
	{ V568_REGTYPE, "V5_REG_JPEG_TARGET_WC_1	",		V5_REG_JPEG_TARGET_WC_1		,			0,	0,	"Target word count[23:16](not use)"},
	{ V568_REGTYPE, "V5_REG_JPEG_TARGET_WC_2	",		V5_REG_JPEG_TARGET_WC_2		,			0,	0,	"Target word count[15:8](not use)"},
	{ V568_REGTYPE, "V5_REG_JPEG_TARGET_WC_3	",		V5_REG_JPEG_TARGET_WC_3		,			0,	0,	"Target word count[0:7](not use)"},
	{ V568_REGTYPE, "V5_REG_JPEG_VIDEO_WC_0		",		V5_REG_JPEG_VIDEO_WC_0		,			0,	0,	"Video word count[31:24]:\n1/4 of the actual byte count of uncompressed image"},
	{ V568_REGTYPE, "V5_REG_JPEG_VIDEO_WC_1		",		V5_REG_JPEG_VIDEO_WC_1		,			0,	0,	"Video word count[23:16]"},
	{ V568_REGTYPE, "V5_REG_JPEG_VIDEO_WC_2		",		V5_REG_JPEG_VIDEO_WC_2		,			0,	0,	"Video word count[15:8]"},
	{ V568_REGTYPE, "V5_REG_JPEG_VIDEO_WC_3		",		V5_REG_JPEG_VIDEO_WC_3		,			0,	0,	"Video word count[0:7]"},
	{ V568_REGTYPE, "V5_REG_JPEG_HUFF_WC_0		",		V5_REG_JPEG_HUFF_WC_0		,			0,	0,	"Huffman word count[31:24]\n1/4 of the byte count of Huffman code"},
	{ V568_REGTYPE, "V5_REG_JPEG_HUFF_WC_1		",		V5_REG_JPEG_HUFF_WC_1		,			0,	0,	"Huffman word count[23:16]"},
	{ V568_REGTYPE, "V5_REG_JPEG_HUFF_WC_2		",		V5_REG_JPEG_HUFF_WC_2		,			0,	0,	"Huffman word count[15:8]"},
	{ V568_REGTYPE, "V5_REG_JPEG_HUFF_WC_3		",		V5_REG_JPEG_HUFF_WC_3		,			0,	0,	"Huffman word count[0:7]"},
	{ V568_REGTYPE, "V5_REG_JPEG_WIDTH_H		",		V5_REG_JPEG_WIDTH_H			,			0,	0,	"Image width high byte [10:8]"},
	{ V568_REGTYPE, "V5_REG_JPEG_WIDTH_L		",		V5_REG_JPEG_WIDTH_L			,			0,	0,	"Image width low byte [7:0]"},
	{ V568_REGTYPE, "V5_REG_JPEG_HEIGHT_H		",		V5_REG_JPEG_HEIGHT_H		,			0,	0,	"Image height high byte [10:8]"},
	{ V568_REGTYPE, "V5_REG_JPEG_HEIGHT_L		",		V5_REG_JPEG_HEIGHT_L		,			0,	0,	"Image height low byte [7:0]"},
	{ V568_REGTYPE, "V5_REG_JPEG_B_H			",		V5_REG_JPEG_B_H				,			0,	0,	"Brc prameter value for bit rate control[8]"},
	{ V568_REGTYPE, "V5_REG_JPEG_B_L			",		V5_REG_JPEG_B_L				,			0,	0,	"Brc prameter value for bit rate control[7:0]"},
	{ V568_REGTYPE, "V5_REG_JPEG_FRAME_CNT_0	",		V5_REG_JPEG_FRAME_CNT_0		,			0,	0,	"Frame count register [15:8]"},
	{ V568_REGTYPE, "V5_REG_JPEG_FRAME_CNT_1	",		V5_REG_JPEG_FRAME_CNT_1		,			0,	0,	"Frame count register [7:0]"},
	{ V568_REGTYPE, "V5_REG_JPEG_DCT_DATA		",		V5_REG_JPEG_DCT_DATA		,			0,	0,	"DCT data used in JPEG encode mode"},
	{ V568_REGTYPE, "V5_REG_JPEG_QUAN_T			",		V5_REG_JPEG_QUAN_T			,			0,	0,	"Quantization table data used in decoder  "},
	{ V568_REGTYPE, "V5_REG_JPEG_HUFF_T			",		V5_REG_JPEG_HUFF_T			,			0,	0,	"Huffman table data used in decoder"},
	{ V568_REGTYPE, "V5_REG_JPEG_NUM_COMP_QUANT	",		V5_REG_JPEG_NUM_COMP_QUANT	,			0,	0,	"Number of components and quantization tables\nQN,Number of quantization tables[2:0]\nCN,Number of components[6:4]"},
	{ V568_REGTYPE, "V5_REG_JPEG_COMP0_P0		",		V5_REG_JPEG_COMP0_P0		,			0,	0,	"Component0 parameter0\nH,Horizontal sampling factor[2:0]\nV,Vertical sampling ratio[5:4]\nTQ,Quantization table selector[7:6]"},
	{ V568_REGTYPE, "V5_REG_JPEG_COMP0_P1		",		V5_REG_JPEG_COMP0_P1		,			0,	0,	"Component0 parameter1\nTD,Huffman table number of DC coefficient[0]\nTA: Huffman table number of AC coefficient[1]\nN0: Block number of in one MCU,N = H*V[6:2]"},
	{ V568_REGTYPE, "V5_REG_JPEG_COMP1_P0		",		V5_REG_JPEG_COMP1_P0		,			0,	0,	"Component1 parameter0\nH,Horizontal sampling factor[2:0]\nV,Vertical sampling ratio[5:4]\nTQ,Quantization table selector[7:6]"},
	{ V568_REGTYPE, "V5_REG_JPEG_COMP1_P1		",		V5_REG_JPEG_COMP1_P1		,			0,	0,	"Component1 parameter1\nTD,Huffman table number of DC coefficient[0]\nTA: Huffman table number of AC coefficient[1]\nN0: Block number of in one MCU,N = H*V[6:2]"},
	{ V568_REGTYPE, "V5_REG_JPEG_COMP2_P0		",		V5_REG_JPEG_COMP2_P0		,			0,	0,	"Component2 parameter0\nH,Horizontal sampling factor[2:0]\nV,Vertical sampling ratio[5:4]\nTQ,Quantization table selector[7:6]"},
	{ V568_REGTYPE, "V5_REG_JPEG_COMP2_P1		",		V5_REG_JPEG_COMP2_P1		,			0,	0,	"Component2 parameter1\nTD,Huffman table number of DC coefficient[0]\nTA: Huffman table number of AC coefficient[1]\nN0: Block number of in one MCU,N = H*V[6:2]"},
	{ V568_REGTYPE, "V5_REG_JPEG_COMP3_P0		",		V5_REG_JPEG_COMP3_P0		,			0,	0,	"Component3 parameter0\nH,Horizontal sampling factor[2:0]\nV,Vertical sampling ratio[5:4]\nTQ,Quantization table selector[7:6]"},
	{ V568_REGTYPE, "V5_REG_JPEG_COMP3_P1		",		V5_REG_JPEG_COMP3_P1		,			0,	0,	"Component3 parameter1\nTD,Huffman table number of DC coefficient[0]\nTA: Huffman table number of AC coefficient[1]\nN0: Block number of in one MCU,N = H*V[6:2]"},
	{ V568_REGTYPE, "V5_REG_JPEG_NUM_BLK_H		",		V5_REG_JPEG_NUM_BLK_H		,			0,	0,	"the high byte of the numbers of 8x8 blocks in 8 lines[9:8]\nYUV422, num_blk =width*(2+1+1)/16\nYUV420, num_blk= width*(4+1+1)/16\nYUV411, num_blk= width*(4+1+1)/32\nYUV400, num_blk= width*(1+0+0)/8"},
	{ V568_REGTYPE, "V5_REG_JPEG_NUM_BLK_L		",		V5_REG_JPEG_NUM_BLK_L		,			0,	0,	"the low byte of the numbers of 8x8 blocks in 8 lines[7:0] "},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_0		",		V5_REG_JPEG_IMGPARA_0		,			0,	0,	"image parameter 0"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_1		",		V5_REG_JPEG_IMGPARA_1		,			0,	0,	"image parameter 1"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_2		",		V5_REG_JPEG_IMGPARA_2		,			0,	0,	"image parameter 2"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_3		",		V5_REG_JPEG_IMGPARA_3		,			0,	0,	"image parameter 3"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_4		",		V5_REG_JPEG_IMGPARA_4		,			0,	0,	"image parameter 4"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_5		",		V5_REG_JPEG_IMGPARA_5		,			0,	0,	"image parameter 5"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_6		",		V5_REG_JPEG_IMGPARA_6		,			0,	0,	"image parameter 6"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_7		",		V5_REG_JPEG_IMGPARA_7		,			0,	0,	"image parameter 7"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_8		",		V5_REG_JPEG_IMGPARA_8		,			0,	0,	"image parameter 8"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_9		",		V5_REG_JPEG_IMGPARA_9		,			0,	0,	"image parameter 9"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_10		",		V5_REG_JPEG_IMGPARA_10		,			0,	0,	"image parameter 10"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_11		",		V5_REG_JPEG_IMGPARA_11		,			0,	0,	"image parameter 11"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_12		",		V5_REG_JPEG_IMGPARA_12		,			0,	0,	"image parameter 12"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_13		",		V5_REG_JPEG_IMGPARA_13		,			0,	0,	"image parameter 13"},
	{ V568_REGTYPE, "V5_REG_JPEG_IMGPARA_14		",		V5_REG_JPEG_IMGPARA_14		,			0,	0,	"image parameter 14"},
	{ V568_REGTYPE, "V5_REG_JPEG_HEAD_SEL		",		V5_REG_JPEG_HEAD_SEL		,			0,	0,	"head_sel[0]\n1-2600feff, 0-feffd8ff"},
	{ V568_REGTYPE, "V5_REG_JPEG_JPEG_WC_0		",		V5_REG_JPEG_JPEG_WC_0		,			0,	0,	"JPEG word count after compression [31:24]   "},
	{ V568_REGTYPE, "V5_REG_JPEG_JPEG_WC_1		",		V5_REG_JPEG_JPEG_WC_1		,			0,	0,	"JPEG word count after compression [23:16]   "},
	{ V568_REGTYPE, "V5_REG_JPEG_JPEG_WC_2		",		V5_REG_JPEG_JPEG_WC_2		,			0,	0,	"JPEG word count after compression [15:8]   "},
	{ V568_REGTYPE, "V5_REG_JPEG_JPEG_WC_3		",		V5_REG_JPEG_JPEG_WC_3		,			0,	0,	"JPEG word count after compression [7:0]"},
	{ V568_REGTYPE, "V5_REG_JPEG_HEADER_LENGTH_H",		V5_REG_JPEG_HEADER_LENGTH_H	,			0,	0,	"Jpeg file header length for feedthrough head "},
	{ V568_REGTYPE, "V5_REG_JPEG_HEADER_LENGTH_L",		V5_REG_JPEG_HEADER_LENGTH_L	,			0,	0,	"Jpeg file header length for feedthrough head "},
	{ V568_REGTYPE, "V5_REG_JPEG_FEEDTHROUGH_HEAD",		V5_REG_JPEG_FEEDTHROUGH_HEAD,			0,	0,	"Feedthrough_head enable[0]	   "},
	{ V568_REGTYPE, "V5_REG_JPEG_PIXEL_COUNT	",		V5_REG_JPEG_PIXEL_COUNT		,			0,	0,	"Pixel count [5:0]  "},
	{ V568_REGTYPE, "V5_REG_JPEG_BLOCKCOUNT_H	",		V5_REG_JPEG_BLOCKCOUNT_H	,			0,	0,	"the high byte of the numbers of 8x8 blocks in  total image [15:8]"},
	{ V568_REGTYPE, "V5_REG_JPEG_BLOCKCOUNT_L	",		V5_REG_JPEG_BLOCKCOUNT_L	,			0,	0,	"the low byte of the numbers of 8x8 blocks in total image [7:0]"},
	{ V568_REGTYPE, "V5_REG_JPEG_DEC_BYPASS		",		V5_REG_JPEG_DEC_BYPASS		,			0,	0,	"Dec_bypass,[4]: dec_bypass_en,[3:0]: dec_bypass_step "},
	{ V568_REGTYPE, "V5_REG_JPEG_ENC_ERR_EN		",		V5_REG_JPEG_ENC_ERR_EN		,			0,	0,	"[0]: enc_err_enable"},
	{ V568_REGTYPE, "V5_REG_JPEG_HBLANK_H		",		V5_REG_JPEG_HBLANK_H		,			0,	0,	"[1:0]: the high byte of the numbers of blanks between two lines"},
	{ V568_REGTYPE, "V5_REG_JPEG_HBLANK_L		",		V5_REG_JPEG_HBLANK_L		,			0,	0,	"[7:0]: the low byte of the numbers of blanks between two lines"}
};

static const TRegUnit gLbufReg[] =
{
	{ V568_REGTYPE, "V5_REG_LBUF_LBUF_STATUS",		V5_REG_LBUF_LBUF_STATUS,		0,	0,	"Line buffer status register\n[7] hblank_done\n[6:2] Line number\n[1] BUF1_RD_OK\n[0] BUF0_RD_OK"},
	{ V568_REGTYPE, "V5_REG_LBUF_YUV_MODE",			V5_REG_LBUF_YUV_MODE,			0,	0,	"Line buffer yuv mode register\n[7:4]pixrate 0001: 2 clk 0011: 4 clk 0111: 8 clk 1011: 12 clk 1111: 16 clk\n[3]lcd 1-YUV data is from LCDC Unit. 0-YUV data is from IPP Unit\n[2:0]YUV_mode 000: YUV422, 001: YUV420, 010: YUV411, 011: YUV400, 100: YUV444(only support in disp or deco mode)"},
	{ V568_REGTYPE, "V5_REG_LBUF_LBUF_MODE",		V5_REG_LBUF_LBUF_MODE,			0,	0,	"Line buffer operation mode register\n[6] vsync_dly_sel,\n 1 : 1 pixel / 1 clk \n 0 : 1 pixel / 2 clk\n[5] vsyncbypass, The bit is used in decoder mode\n 1 :  lbuf_ipp_vsync = jpeg_lbuf_vsync\n 0 :  transfer vsync signal from jpeg_lbuf_vsync to lbuf_ipp_vsync need delay\n[4:3] decoder mode\n  00: normal\n  01: ipp\n  10: ipp lcd\n[2:0] Lbuf_mode\n  000: Viewfinder\n  001: Capture\n  010: Display\n  100: decoder"},
	{ V568_REGTYPE, "V5_REG_LBUF_LBUF_CNT_RESET",	V5_REG_LBUF_LBUF_CNT_RESET,		0,	0,	"Line buffer internal counter reset\n[4]dec_bypass, In display, decoder with ipp and decoder with frame mode\n[3]rgb565 ,In decoder with frame mode, lcdc_lbuf_data:1 - rgb565, 0 - rgb888\n[2] preshift_dec\n  This bit is used to control preshift data in display and decoder mode\n  If [4] dec_bypass is 1¡¯b1 : do not do preshift no matter preshift_dec is 1¡¯b0 or 1¡¯b1;\n  If [4] dec_bypass is 1¡¯b0 : \n  1¡¯b1 : do not do preshift\n  1¡¯b0 : preshift  data from ¨C128 - +128 -> 0 ¨C 255\n[1]   preshift_enc\n  1¡¯b1 : do not do preshift\n  1¡¯b0 : preshift data from 0 ¨C 255 -> -128 - +128\n[0]    lbuf_cnt_reset"},
	{ V568_REGTYPE, "V5_REG_LBUF_WIDTH_H",			V5_REG_LBUF_WIDTH_H,			0,	0,	"Image width high byte[3:0] "},
	{ V568_REGTYPE, "V5_REG_LBUF_WIDTH_L",			V5_REG_LBUF_WIDTH_L,			0,	0,	"Image width low byte[7:0] "},
	{ V568_REGTYPE, "V5_REG_LBUF_HBLANK_H",			V5_REG_LBUF_HBLANK_H,			0,	0,	"Hblank time =Hblank value * (pixelcount+1)[1:0]"},
	{ V568_REGTYPE, "V5_REG_LBUF_HBLANK_L",			V5_REG_LBUF_HBLANK_L,			0,	0,	"Hblank time =Hblank value * (pixelcount+1)[7:0]"},
	{ V568_REGTYPE, "V5_REG_LBUF_INI_ADDR_H",		V5_REG_LBUF_INI_ADDR_H,			0,	0,	"Initial address for lbuf in Marb. High byte[0]"},
	{ V568_REGTYPE, "V5_REG_LBUF_INI_ADDR_M",		V5_REG_LBUF_INI_ADDR_M,			0,	0,	"Initial address for lbuf in Marb. Medium byte[7:0]"},
	{ V568_REGTYPE, "V5_REG_LBUF_INI_ADDR_L",		V5_REG_LBUF_INI_ADDR_L,			0,	0,	"Initial address for lbuf in Marb. Low byte[7:0];"},
	{ V568_REGTYPE, "V5_REG_LBUF_ADDR_BUF_H",		V5_REG_LBUF_ADDR_BUF_H,			0,	0,	"Indicate address in 8 line buffer high byte[0]"},
	{ V568_REGTYPE, "V5_REG_LBUF_ADDR_BUF_M",		V5_REG_LBUF_ADDR_BUF_M,			0,	0,	"Indicate address in 8 line buffer medium byte[7:0]"},
	{ V568_REGTYPE, "V5_REG_LBUF_ADDR_BUF_L",		V5_REG_LBUF_ADDR_BUF_L,			0,	0,	"Indicate address in 8 line buffer low byte[7:0],"},
	{ V568_REGTYPE, "V5_REG_LBUF_SEQ_FSM",			V5_REG_LBUF_SEQ_FSM,			0,	0,	"Indicate seq fsm in lbuf module.\n[4:0]This FSM is used to store data from ipp and lcdc in capture, viewfinder and decoder mode"},
	{ V568_REGTYPE, "V5_REG_LBUF_SEQ_RWFSM",		V5_REG_LBUF_SEQ_RWFSM,			0,	0,	"Indicate seq_rw fsm in lbuf module.\n[3:0]seq_rw_ps: This FSM is controlled by seq_ps to store data"},
	{ V568_REGTYPE, "V5_REG_LBUF_LBUF_IN_SGN",		V5_REG_LBUF_LBUF_IN_SGN,		0,	0,	"Internal signal\n[5]lbuf_ipp_marb_rd_win: internal signal; lbuf read data from marb window, used in disp & deco mode\n[4]lbuf_ipp_out_win : internal signal; lbuf output data to ipp window; used in disp & deco mode\n[3]blk_adr_op : internal signal, indicate block read operation period\n[2]blk_bp: internal signal, indicate which is being read 8lbuf of two 8lbuf capt & vewf mode; indicate block write operation period in disp & deco mode\n[1]seq_bp: internal signal; indicate which is being write 8lbuf of two 8lbuf in capt & vewf mode; same as blk_bp in disp & deco mode\n[0]seq_bp2: internal signal; indicate sequential wirte period in deco mode"},
	{ V568_REGTYPE, "V5_REG_LBUF_SEQ_ADDR_H",		V5_REG_LBUF_SEQ_ADDR_H,			0,	0,	"Sequential address counter high byte,\n[4:0]seq2_adr_line: internal signal; sequential address counter ; used in reading data from marb to ipp in disp & deco mode"},
	{ V568_REGTYPE, "V5_REG_LBUF_SEQ_ADDR_L",		V5_REG_LBUF_SEQ_ADDR_L,			0,	0,	"Sequential address counter low byt,\n[4:0]seq_adr_line: internal signal; sequential address counter, used in storing data from ipp & lcdc in capt,vewf ,deco with ipp & deco with frame"}

};

static const TRegUnit gLcdcReg[] =
{
	{ V568_REGTYPE, "V5_REG_LCDC_DC",			V5_REG_LCDC_DC,			0, 0, "1'b[0]:dither enable;\n2'b[2:1]:dither select\nDITSEL   R:G:B\n00 :    4:4:4\n01 :   5:6:5\n1'b[3]:Gamma enable;\n2'b[5:4]:Overlay mode(00 :     Transparent overlay.01:      And overlay\n10:      Or overlay.11:     Invert overlay.);\n1'b[6]:overlay enable;\n1'b[7]:blending enable." },
	{ V568_REGTYPE, "V5_REG_LCDC_DC_H",			V5_REG_LCDC_DC_H,		0, 0, "1'b[8]:layer priority(0:layer A has higher priority,\n1:layer B has higher priority).\n2'b[11]:show layer A(1:show,0:not show)\n1'b[12]:decode mode(0:normal,1:decode).\n1'b[13]:GBUF select(0:select graphic buffer 0,1:0:select graphic buffer 1).\n1'b[14]:single frame buf enable;\n1'b[15]:video buf mode(0:video buffer acts as line buffer,\n1:video buffer acts as frame buffer)." },
	{ V568_REGTYPE, "V5_REG_LCDC_DE",			V5_REG_LCDC_DE,			0, 0, "1'b[0]:display enable(reserved for vc0578);\n1'b[1]:Layer-A Display Enable;\n1'b[2]:Layer-B Display Enable(reserved for vc0578);\n1'b[3]:Background Display Enable(reserved for vc0578);\n1'b[4]:Layer-A Operation Enable;\n1'b[7]:Layer-A End Of Frame(0:cleared only by software,\n1:set only by hardware at the end of transferring one frame to LCD screen)." },
	{ V568_REGTYPE, "V5_REG_LCDC_DRST",			V5_REG_LCDC_DRST,		0, 0, "1'b[7]: Lcdc_reset : module level reset." },
	{ V568_REGTYPE, "V5_REG_LCDC_UPDATE",		V5_REG_LCDC_UPDATE,		0, 0, "1'b[0]: Update b\nmcu send out a pulse signal to update b layer, this bit is self-clear;\n1'b[1]: Update bg;" },
	{ V568_REGTYPE, "V5_REG_LCDC_RM",			V5_REG_LCDC_RM,			0, 0, "3'b[2:0]: Layer A Rotation Mode;\n3'b[5:3]: Layer B Rotation Mode." },
	{ V568_REGTYPE, "V5_REG_LCDC_VBBA0_L",		V5_REG_LCDC_VBBA0_L,	0, 0, "Starting address of video buffer 0 in the 1-T SRAM space." },
	{ V568_REGTYPE, "V5_REG_LCDC_VBBA0_M",		V5_REG_LCDC_VBBA0_M,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_VBBA0_H",		V5_REG_LCDC_VBBA0_H,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_VBBA1_L",		V5_REG_LCDC_VBBA1_L,	0, 0, "Starting address of video buffer 1 in the 1-T SRAM space." },
	{ V568_REGTYPE, "V5_REG_LCDC_VBBA1_M",		V5_REG_LCDC_VBBA1_M,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_VBBA1_H",		V5_REG_LCDC_VBBA1_H,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_GBBA0_L",		V5_REG_LCDC_GBBA0_L,	0, 0, "Set the starting address of graphic buffer 0 in the 1-T SRAM space." },
	{ V568_REGTYPE, "V5_REG_LCDC_GBBA0_M",		V5_REG_LCDC_GBBA0_M,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_GBBA0_H",		V5_REG_LCDC_GBBA0_H,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_GBBA1_L",		V5_REG_LCDC_GBBA1_L,	0, 0, "Set the starting address of graphic buffer 1 in the 1-T SRAM space." },
	{ V568_REGTYPE, "V5_REG_LCDC_GBBA1_M",		V5_REG_LCDC_GBBA1_M,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_GBBA1_H",		V5_REG_LCDC_GBBA1_H,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_AX_L",			V5_REG_LCDC_AX_L,		0, 0, "X coordinates of Layer-A display position on the LCD screen.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_AX_H",			V5_REG_LCDC_AX_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_AY_L",			V5_REG_LCDC_AY_L,		0, 0, "Y coordinates of Layer-A display position on the LCD screen.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_AY_H",			V5_REG_LCDC_AY_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_AW_L",			V5_REG_LCDC_AW_L,		0, 0, "Horizontal width of Layer-A window on the LCD screen.(0-0x1fd)" },
	{ V568_REGTYPE, "V5_REG_LCDC_AW_H",			V5_REG_LCDC_AW_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_AH_L",			V5_REG_LCDC_AH_L,		0, 0, "Height of Layer-A window on the LCD screen.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_AH_H",			V5_REG_LCDC_AH_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_ADX0_L",		V5_REG_LCDC_ADX0_L,		0, 0, "X coordinates of display start position on the logical frame of Layer-A0.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_ADX0_H",		V5_REG_LCDC_ADX0_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_ADY0_L",		V5_REG_LCDC_ADY0_L,		0, 0, "Y coordinates of display start position on the logical frame of Layer-A0.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_ADY0_H",		V5_REG_LCDC_ADY0_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_AMW_L",		V5_REG_LCDC_AMW_L,		0, 0, "Width of the logical frame of Layer-A in pixel unit.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_AMW_H",		V5_REG_LCDC_AMW_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_AMH_L",		V5_REG_LCDC_AMH_L,		0, 0, "Height of the logical frame of Layer-A in pixel unit.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_AMH_H",		V5_REG_LCDC_AMH_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BX_L",			V5_REG_LCDC_BX_L,		0, 0, "X coordinates of Layer-B display position on the LCD screen.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BX_H",			V5_REG_LCDC_BX_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BY_L",			V5_REG_LCDC_BY_L,		0, 0, "Y coordinates of Layer-B display position on the LCD screen.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BY_H",			V5_REG_LCDC_BY_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BW_L",			V5_REG_LCDC_BW_L,		0, 0, "Width of Layer-B window on the LCD screen.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BW_H",			V5_REG_LCDC_BW_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BH_L",			V5_REG_LCDC_BH_L,		0, 0, "Height of Layer-B window on the LCD screen.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BH_H",			V5_REG_LCDC_BH_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BDX0_L",		V5_REG_LCDC_BDX0_L,		0, 0, "X coordinates of display start position on the logical frame of Layer-B0.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BDX0_H",		V5_REG_LCDC_BDX0_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BDY0_L",		V5_REG_LCDC_BDY0_L,		0, 0, "Y coordinates of display start position on the logical frame of Layer-B0.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BDY0_H",		V5_REG_LCDC_BDY0_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BDX1_L",		V5_REG_LCDC_BDX1_L,		0, 0, "X coordinates of display start position on the logical frame of Layer-B1.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BDX1_H",		V5_REG_LCDC_BDX1_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BDY1_L",		V5_REG_LCDC_BDY1_L,		0, 0, "Y coordinates of display start position on the logical frame of Layer-B1.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BDY1_H",		V5_REG_LCDC_BDY1_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BMW0_L",		V5_REG_LCDC_BMW0_L,		0, 0, "Width of the logical frame of Layer-B in pixel unit.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BMW0_H",		V5_REG_LCDC_BMW0_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BMW1_L",		V5_REG_LCDC_BMW1_L,		0, 0, "Height of the logical frame of Layer-B in pixel unit.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BMW1_H",		V5_REG_LCDC_BMW1_H,		0, 0, "" },

	{ V568_REGTYPE, "V5_REG_LCDC_BRX_L",		V5_REG_LCDC_BRX_L,		0, 0, "X coordinate of the top-left corner of the block to be refreshed in Layer-B.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BRX_H",		V5_REG_LCDC_BRX_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BRY_L",		V5_REG_LCDC_BRY_L,		0, 0, "Y coordinate of the top-left corner of the block to be refreshed in Layer-B.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BRY_H",		V5_REG_LCDC_BRY_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BRW_L",		V5_REG_LCDC_BRW_L,		0, 0, "Width of the Layer-B refresh block in pixel unit.(0-0x1fe)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BRW_H",		V5_REG_LCDC_BRW_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BRH_L",		V5_REG_LCDC_BRH_L,		0, 0, "Height of the Layer-B refresh block in pixel unit. (0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BRH_H",		V5_REG_LCDC_BRH_H,		0, 0, "" },

	{ V568_REGTYPE, "V5_REG_LCDC_BGX_L",		V5_REG_LCDC_BGX_L,		0, 0, "X coordinate of the top-left corner of the block to be refreshed in BG layer.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BGX_H",		V5_REG_LCDC_BGX_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BGY_L",		V5_REG_LCDC_BGY_L,		0, 0, "Y coordinate of the top-left corner of the block to be refreshed in BG layer.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BGY_H",		V5_REG_LCDC_BGY_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BGW_L",		V5_REG_LCDC_BGW_L,		0, 0, "Width of the background layer refreshing block in pixel unit.(0-0x1fe)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BGW_H",		V5_REG_LCDC_BGW_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BGH_L",		V5_REG_LCDC_BGH_L,		0, 0, "Height of the background layer refreshing block in pixel unit.(0-0x1ff)" },
	{ V568_REGTYPE, "V5_REG_LCDC_BGH_H",		V5_REG_LCDC_BGH_H,		0, 0, "" },

	{ V568_REGTYPE, "V5_REG_LCDC_OKC_L",		V5_REG_LCDC_OKC_L,		0, 0, "Overlay key color." },
	{ V568_REGTYPE, "V5_REG_LCDC_OKC_M",		V5_REG_LCDC_OKC_M,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_OKC_H",		V5_REG_LCDC_OKC_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_OKCM",			V5_REG_LCDC_OKCM,		0, 0, "1'[24]: Overlay key color mode." },
	{ V568_REGTYPE, "V5_REG_LCDC_BR",			V5_REG_LCDC_BR,			0, 0, "Blend Ratio." },
	{ V568_REGTYPE, "V5_REG_LCDC_GBUFFMT",		V5_REG_LCDC_GBUFFMT,	0, 0, "4b'[3:0]: BFM (Graphic buffer data Format)." },
	{ V568_REGTYPE, "V5_REG_LCDC_BGD_L",		V5_REG_LCDC_BGD_L,		0, 0, "Background color." },
	{ V568_REGTYPE, "V5_REG_LCDC_BGD_M",		V5_REG_LCDC_BGD_M,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_BGD_H",		V5_REG_LCDC_BGD_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_PD_L",			V5_REG_LCDC_PD_L,		0, 0, "Color table value we want to send to ram." },
	{ V568_REGTYPE, "V5_REG_LCDC_PD_M",			V5_REG_LCDC_PD_M,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_PD_H",			V5_REG_LCDC_PD_H,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_LCDC_PA",			V5_REG_LCDC_PA,			0, 0, "The address of the 24-bit color data." },

	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R0",		V5_REG_LCDC_GLUT_R0,	0, 0, "Gamma look up table R value 0." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R1",		V5_REG_LCDC_GLUT_R1,	0, 0, "Gamma look up table R value 1." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R2",		V5_REG_LCDC_GLUT_R2,	0, 0, "Gamma look up table R value 2." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R3",		V5_REG_LCDC_GLUT_R3,	0, 0, "Gamma look up table R value 3." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R4",		V5_REG_LCDC_GLUT_R4,	0, 0, "Gamma look up table R value 4." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R5",		V5_REG_LCDC_GLUT_R5,	0, 0, "Gamma look up table R value 5." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R6",		V5_REG_LCDC_GLUT_R6,	0, 0, "Gamma look up table R value 6." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R7",		V5_REG_LCDC_GLUT_R7,	0, 0, "Gamma look up table R value 7." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R8",		V5_REG_LCDC_GLUT_R8,	0, 0, "Gamma look up table R value 8." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R9",		V5_REG_LCDC_GLUT_R9,	0, 0, "Gamma look up table R value 9." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R10",		V5_REG_LCDC_GLUT_R10,	0, 0, "Gamma look up table R value 10." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R11",		V5_REG_LCDC_GLUT_R11,	0, 0, "Gamma look up table R value 11." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R12",		V5_REG_LCDC_GLUT_R12,	0, 0, "Gamma look up table R value 12." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R13",		V5_REG_LCDC_GLUT_R13,	0, 0, "Gamma look up table R value 13." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R14",		V5_REG_LCDC_GLUT_R14,	0, 0, "Gamma look up table R value 14." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R15",		V5_REG_LCDC_GLUT_R15,	0, 0, "Gamma look up table R value 15." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_R16",		V5_REG_LCDC_GLUT_R16,	0, 0, "Gamma look up table R value 16." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G0",		V5_REG_LCDC_GLUT_G0,	0, 0, "Gamma look up table G value 0." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G1",		V5_REG_LCDC_GLUT_G1,	0, 0, "Gamma look up table G value 1." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G2",		V5_REG_LCDC_GLUT_G2,	0, 0, "Gamma look up table G value 2." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G3",		V5_REG_LCDC_GLUT_G3,	0, 0, "Gamma look up table G value 3." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G4",		V5_REG_LCDC_GLUT_G4,	0, 0, "Gamma look up table G value 4." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G5",		V5_REG_LCDC_GLUT_G5,	0, 0, "Gamma look up table G value 5." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G6",		V5_REG_LCDC_GLUT_G6,	0, 0, "Gamma look up table G value 6." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G7",		V5_REG_LCDC_GLUT_G7,	0, 0, "Gamma look up table G value 7." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G8",		V5_REG_LCDC_GLUT_G8,	0, 0, "Gamma look up table G value 8." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G9",		V5_REG_LCDC_GLUT_G9,	0, 0, "Gamma look up table G value 9." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G10",		V5_REG_LCDC_GLUT_G10,	0, 0, "Gamma look up table G value 10." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G11",		V5_REG_LCDC_GLUT_G11,	0, 0, "Gamma look up table G value 11." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G12",		V5_REG_LCDC_GLUT_G12,	0, 0, "Gamma look up table G value 12." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G13",		V5_REG_LCDC_GLUT_G13,	0, 0, "Gamma look up table G value 13." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G14",		V5_REG_LCDC_GLUT_G14,	0, 0, "Gamma look up table G value 14." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G15",		V5_REG_LCDC_GLUT_G15,	0, 0, "Gamma look up table G value 15." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_G16",		V5_REG_LCDC_GLUT_G16,	0, 0, "Gamma look up table G value 16." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B0",		V5_REG_LCDC_GLUT_B0,	0, 0, "Gamma look up table B value 0." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B1",		V5_REG_LCDC_GLUT_B1,	0, 0, "Gamma look up table B value 1." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B2",		V5_REG_LCDC_GLUT_B2,	0, 0, "Gamma look up table B value 2." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B3",		V5_REG_LCDC_GLUT_B3,	0, 0, "Gamma look up table B value 3." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B4",		V5_REG_LCDC_GLUT_B4,	0, 0, "Gamma look up table B value 4." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B5",		V5_REG_LCDC_GLUT_B5,	0, 0, "Gamma look up table B value 5." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B6",		V5_REG_LCDC_GLUT_B6,	0, 0, "Gamma look up table B value 6." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B7",		V5_REG_LCDC_GLUT_B7,	0, 0, "Gamma look up table B value 7." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B8",		V5_REG_LCDC_GLUT_B8,	0, 0, "Gamma look up table B value 8." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B9",		V5_REG_LCDC_GLUT_B9,	0, 0, "Gamma look up table B value 9." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B10",		V5_REG_LCDC_GLUT_B10,	0, 0, "Gamma look up table B value 10." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B11",		V5_REG_LCDC_GLUT_B11,	0, 0, "Gamma look up table B value 11." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B12",		V5_REG_LCDC_GLUT_B12,	0, 0, "Gamma look up table B value 12." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B13",		V5_REG_LCDC_GLUT_B13,	0, 0, "Gamma look up table B value 13." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B14",		V5_REG_LCDC_GLUT_B14,	0, 0, "Gamma look up table B value 14." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B15",		V5_REG_LCDC_GLUT_B15,	0, 0, "Gamma look up table B value 15." },
	{ V568_REGTYPE, "V5_REG_LCDC_GLUT_B16",		V5_REG_LCDC_GLUT_B16,	0, 0, "Gamma look up table B value 16." },

	{ V568_REGTYPE, "V5_REG_LCDC_DEDLY",		V5_REG_LCDC_DEDLY,		0, 0, "DEDLY (data enable delay). Min:15; Max:256." },
	{ V568_REGTYPE, "V5_REG_LCDC_DEINTV",		V5_REG_LCDC_DEINTV,		0, 0, "6'b[5:0]: DEINTV (data enable interval). Min:2; Max:63." },
	{ V568_REGTYPE, "V5_REG_LCDC_LINEINTV",		V5_REG_LCDC_LINEINTV,	0, 0, "LINEINTV (line interval). Min:15; Max:256." }
};

static const TRegUnit gMarbReg[] =
{
	{ V568_REGTYPE, "V5_REG_MARB_MARB_CTRL	",		V5_REG_MARB_MARB_CTRL	,			0,	0,	"MARB control register1, clear by hardware \n[1]: start capture / pc camera \n[2]: stop capture avi / pc camera\n[3]: start decoder\n[4]: update priority\n[5]: start access SRAM from STO\n[6]: start read /write data from  1T-SRAM to UDC \n[7]: MARB starts capture audio data in audio buffer"},
	{ V568_REGTYPE, "V5_REG_MARB_MARB_RESET	",		V5_REG_MARB_MARB_RESET	,			0,	0,	"MARB sub-module reset register, clear by software¡®1¡¯: reset, ¡®0¡¯: not reset\n[0]: reset marb_ipp module\n[1]: reset marb_jpeg module\n[2]: reset 1T-SRAM 0\n[3]: reset 1T-SRAM 1\n[4]: reset 1T-SRAM 2\n[5]: reset 1T-SRAM 3"},
	{ V568_REGTYPE, "V5_REG_MARB_MODE_CTRL_0",		V5_REG_MARB_MODE_CTRL_0	,			0,	0,	"Mode control register\n[1:0]: capture mode(00: capture still image\n01: capture multi-shot\n10: capture avi\n11: pc camera)\n[2]: encoder or decoder(0: encoder, 1: decoder)\n[3]: with thumbnail or without thumbnail\n0: with thumbnail, 1: without thumbnail\n[4]: write video header to memory\n0: write to memory, 1: not write\n[5]: write avi index\n0: write\n1: not write\n[6]: with JPEG or without JPEG when capturing\n0: with JPEG, 1: without JPEG\n[7]: jpeg interval interrupt type\n0: use jbuf_intv, 1: use frame_interv"},
	{ V568_REGTYPE, "V5_REG_MARB_MODE_CTRL_1",		V5_REG_MARB_MODE_CTRL_1	,			0,	0,	"JPEG buffer control register\n[0]: JPEG buffer type\n0: FIFO, care host read/write point\n1: buffer, doesn¡¯t care host read/write point\n[1]: thumbnail buffer type\n0: FIFO, care host read/write point\n1: buffer, doesn¡¯t care host read/write point\n[2]: write audio header to memory\n0: write to memory, 1: not write\n[3]: host_sto: captured image is read by host or STO during encoding,\nor JPEG file is written by host or STO during decoding.\n0: host, 1: STO.\n[5]: storage Buffer location\n0: jpeg buffer or audio buffer data\n1: address defined by sto_start and sto_end\n[6]: storage buffer access type\n0: read storage buffer\n1: write storage buffer\n[7]: storage type\n0: FIFO, care host read/write point\n1: buffer, doesn¡¯t care host read/write point"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_START_0",		V5_REG_MARB_JBUF_START_0,			0,	0,	"JPEG buffer start address [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_START_1",		V5_REG_MARB_JBUF_START_1,			0,	0,	"JPEG buffer start address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_START_2",		V5_REG_MARB_JBUF_START_2,			0,	0,	"JPEG buffer start address [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_END_0	",		V5_REG_MARB_JBUF_END_0	,			0,	0,	"JPEG buffer size [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_END_1	",		V5_REG_MARB_JBUF_END_1	,			0,	0,	"JPEG buffer size [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_END_2	",		V5_REG_MARB_JBUF_END_2	,			0,	0,	"JPEG buffer size [7:0] ,\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_START_0",		V5_REG_MARB_TBUF_START_0,			0,	0,	"Thumbnail buffer start address [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_START_1",		V5_REG_MARB_TBUF_START_1,			0,	0,	"Thumbnail buffer start address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_START_2",		V5_REG_MARB_TBUF_START_2,			0,	0,	"Thumbnail buffer start address [7:2] ,\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_END_0	",		V5_REG_MARB_TBUF_END_0	,			0,	0,	"Thumbnail buffer end address [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_END_1	",		V5_REG_MARB_TBUF_END_1	,			0,	0,	"Thumbnail buffer end address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_END_2	",		V5_REG_MARB_TBUF_END_2	,			0,	0,	"Thumbnail buffer end address [7:2] ,\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_ABUF_START_0",		V5_REG_MARB_ABUF_START_0,			0,	0,	"Audio buffer start address [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_ABUF_START_1",		V5_REG_MARB_ABUF_START_1,			0,	0,	"Audio buffer start address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_ABUF_START_2",		V5_REG_MARB_ABUF_START_2,			0,	0,	"Audio buffer start address [7:0] ,\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_ABUF_END_0	",		V5_REG_MARB_ABUF_END_0	,			0,	0,	"Audio buffer end address [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_ABUF_END_1	",		V5_REG_MARB_ABUF_END_1	,			0,	0,	"Audio buffer end address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_ABUF_END_2	",		V5_REG_MARB_ABUF_END_2	,			0,	0,	"Audio buffer end address [7:0] ,\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_START_0",		V5_REG_MARB_STO_START_0	,			0,	0,	"Storage start address [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_START_1",		V5_REG_MARB_STO_START_1	,			0,	0,	"Storage start address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_START_2",		V5_REG_MARB_STO_START_2	,			0,	0,	"Storage start address [7:0] ,\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_END_0	",		V5_REG_MARB_STO_END_0	,			0,	0,	"Storage end address [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_END_1	",		V5_REG_MARB_STO_END_1	,			0,	0,	"Storage end address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_END_2	",		V5_REG_MARB_STO_END_2	,			0,	0,	"Storage end address [7:0] ,\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_IDX_START_0",		V5_REG_MARB_IDX_START_0	,			0,	0,	"AVI index buffer start address [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_IDX_START_1",		V5_REG_MARB_IDX_START_1	,			0,	0,	"AVI index buffer start address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_IDX_START_2",		V5_REG_MARB_IDX_START_2	,			0,	0,	"AVI index buffer start address [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_IDX_END_0	",		V5_REG_MARB_IDX_END_0	,			0,	0,	"AVI index buffer end address [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_IDX_END_1	",		V5_REG_MARB_IDX_END_1	,			0,	0,	"AVI index buffer end address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_IDX_END_2	",		V5_REG_MARB_IDX_END_2	,			0,	0,	"AVI index buffer end address [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_INTV_0",		V5_REG_MARB_JBUF_INTV_0	,			0,	0,	"JPEG buffer interval [24:16]\nAn interrupt is generated when ¡°jbuf_intv¡± data is write or read\nIt is actual interval -1"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_INTV_1",		V5_REG_MARB_JBUF_INTV_1	,			0,	0,	"JPEG buffer interval [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_INTV_2",		V5_REG_MARB_JBUF_INTV_2	,			0,	0,	"JPEG buffer interval [7:0],\nthe last two bits cannot be written"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_UP_0	",		V5_REG_MARB_JBUF_UP_0	,			0,	0,	"JPEG buffer FIFO counter upper threshold [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_UP_1	",		V5_REG_MARB_JBUF_UP_1	,			0,	0,	"JPEG buffer FIFO counter upper threshold [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_UP_2	",		V5_REG_MARB_JBUF_UP_2	,			0,	0,	"JPEG buffer FIFO counter upper threshold [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_LOW_0	",		V5_REG_MARB_JBUF_LOW_0	,			0,	0,	"JPEG buffer FIFO counter lower threshold [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_LOW_1	",		V5_REG_MARB_JBUF_LOW_1	,			0,	0,	"JPEG buffer FIFO counter lower threshold [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_LOW_2	",		V5_REG_MARB_JBUF_LOW_2	,			0,	0,	"JPEG buffer FIFO counter lower threshold [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_INTV_0",		V5_REG_MARB_TBUF_INTV_0	,			0,	0,	"Thumbnail buffer interval [24:16]\nAn interrupt is generated when ¡°tbuf_intv¡± data is write or read\nIt is actual interval -1"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_INTV_1",		V5_REG_MARB_TBUF_INTV_1	,			0,	0,	"Thumbnail buffer interval [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_INTV_2",		V5_REG_MARB_TBUF_INTV_2	,			0,	0,	"Thumbnail buffer interval [7:0],\nthe last two bits cannot be written"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_UP_0	",		V5_REG_MARB_TBUF_UP_0	,			0,	0,	"Thumbnail buffer FIFO counter upper threshold [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_UP_1	",		V5_REG_MARB_TBUF_UP_1	,			0,	0,	"Thumbnail buffer FIFO counter upper threshold [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_UP_2	",		V5_REG_MARB_TBUF_UP_2	,			0,	0,	"Thumbnail buffer FIFO counter upper threshold [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_LOW_0	",		V5_REG_MARB_TBUF_LOW_0	,			0,	0,	"Thumbnail buffer FIFO counter lower threshold [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_LOW_1	",		V5_REG_MARB_TBUF_LOW_1	,			0,	0,	"Thumbnail buffer FIFO counter lower threshold [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_LOW_2	",		V5_REG_MARB_TBUF_LOW_2	,			0,	0,	"Thumbnail buffer FIFO counter lower threshold [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_INTV_0	",		V5_REG_MARB_STO_INTV_0	,			0,	0,	"STO buffer interval [24:16]\nAn interrupt is generated when ¡°sto_intv¡± data is write or read"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_INTV_1	",		V5_REG_MARB_STO_INTV_1	,			0,	0,	"STO buffer interval [16:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_INTV_2	",		V5_REG_MARB_STO_INTV_2	,			0,	0,	"STO buffer interval [7:0],\nthe last two bits cannot be written"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_UP_0	",		V5_REG_MARB_STO_UP_0	,			0,	0,	"storage buffer FIFO counter upper threshold [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_UP_1	",		V5_REG_MARB_STO_UP_1	,			0,	0,	"storage buffer FIFO counter upper threshold [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_UP_2	",		V5_REG_MARB_STO_UP_2	,			0,	0,	"storage buffer FIFO counter upper threshold [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_LOW_0	",		V5_REG_MARB_STO_LOW_0	,			0,	0,	"storage buffer FIFO counter lower threshold [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_LOW_1	",		V5_REG_MARB_STO_LOW_1	,			0,	0,	"storage buffer FIFO counter lower threshold [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_LOW_2	",		V5_REG_MARB_STO_LOW_2	,			0,	0,	"storage buffer FIFO counter lower threshold [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_AUD_INTV_0	",		V5_REG_MARB_AUD_INTV_0	,			0,	0,	"Audio length interval in AVI file [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_AUD_INTV_1	",		V5_REG_MARB_AUD_INTV_1	,			0,	0,	"Audio length interval in AVI file [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_AUD_INTV_2	",		V5_REG_MARB_AUD_INTV_2	,			0,	0,	"Audio length interval in AVI file [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_AUD_UP_0	",		V5_REG_MARB_AUD_UP_0	,			0,	0,	"audio buffer FIFO counter upper threshold [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_AUD_UP_1	",		V5_REG_MARB_AUD_UP_1	,			0,	0,	"audio buffer FIFO counter upper threshold [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_AUD_UP_2	",		V5_REG_MARB_AUD_UP_2	,			0,	0,	"audio buffer FIFO counter upper threshold [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_AUD_LOW_0	",		V5_REG_MARB_AUD_LOW_0	,			0,	0,	"audio buffer FIFO counter lower threshold [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_AUD_LOW_1	",		V5_REG_MARB_AUD_LOW_1	,			0,	0,	"audio buffer FIFO counter lower threshold [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_AUD_LOW_2	",		V5_REG_MARB_AUD_LOW_2	,			0,	0,	"audio buffer FIFO counter lower threshold [7:0],\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_BULK_START_0",		V5_REG_MARB_BULK_START_0,			0,	0,	"Bulk buffer start address[23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_BULK_START_1",		V5_REG_MARB_BULK_START_1,			0,	0,	"Bulk buffer start address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_BULK_START_2",		V5_REG_MARB_BULK_START_2,			0,	0,	"Bulk buffer start address [7:0] ,\nlast two bits cannot be written, fixed to 2¡¯b00"},
	{ V568_REGTYPE, "V5_REG_MARB_FRAME_INTERV",		V5_REG_MARB_FRAME_INTERV,			0,	0,	"Frame interval for AVI or multi-shot file,\nused for frame save done interrupt"},
	{ V568_REGTYPE, "V5_REG_MARB_MEMORY_CTRL",		V5_REG_MARB_MEMORY_CTRL	,			0,	0,	"Memory control register\n[0]: SRAM 0 turn on bit\n0: shutdown; 1: on\n[1]: SRAM 1 turn on bit\n[2]: SRAM 2 turn on bit\n[3]: SRAM 3 turn on bit\n[5:4]: speed select\n00: 70-83 MHz\n01: 50-70 MHz\n10: 30-50 MHz\n11: 20-30 MHz\n[6]: PSRAM power on\n0: deep power down mode (E2 is low)\n1: power on mode (E2 is high)"},
	{ V568_REGTYPE, "V5_REG_MARB_MEM_FREQ	",		V5_REG_MARB_MEM_FREQ	,			0,	0,	"Memory frequency[6:0],\nthe unit is MHz,Default is 54MHz"},
	{ V568_REGTYPE, "V5_REG_MARB_MSHOT_FCNT	",		V5_REG_MARB_MSHOT_FCNT	,			0,	0,	"Multi-shot frame count - 1[7:0]"},
	{ V568_REGTYPE, "V5_REG_MARB_P_TABLE_0	",		V5_REG_MARB_P_TABLE_0	,			0,	0,	"Priority table 0 [3:0]: JPEG [7:4]: IPP"},
	{ V568_REGTYPE, "V5_REG_MARB_P_TABLE_1	",		V5_REG_MARB_P_TABLE_1	,			0,	0,	"Priority table 1 [3:0]: LCD video buffer write\n[7:4]: LCD video buffer read"},
	{ V568_REGTYPE, "V5_REG_MARB_P_TABLE_2	",		V5_REG_MARB_P_TABLE_2	,			0,	0,	"Priority table 2 [3:0]: LCD graphic buffer read\n[7:4]: Graphic engine"},
	{ V568_REGTYPE, "V5_REG_MARB_P_TABLE_3	",		V5_REG_MARB_P_TABLE_3	,			0,	0,	"Priority table 3 [3:0]: STO [7:4]: audio write"},
	{ V568_REGTYPE, "V5_REG_MARB_P_TABLE_4	",		V5_REG_MARB_P_TABLE_4	,			0,	0,	"Priority table 4 [3:0]: UDC iso read\n[7:4]: UDC bulk"},
	{ V568_REGTYPE, "V5_REG_MARB_PSRAM_CTRL	",		V5_REG_MARB_PSRAM_CTRL	,			0,	0,	"PSRAM control register, hardware clear\n[0]: start read\n[2]: start write"},
	{ V568_REGTYPE, "V5_REG_MARB_PSRAM_ADDR_0",		V5_REG_MARB_PSRAM_ADDR_0,			0,	0,	"PSRAM read/write address [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_PSRAM_ADDR_1",		V5_REG_MARB_PSRAM_ADDR_1,			0,	0,	"PSRAM read/write address [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_PSRAM_ADDR_2",		V5_REG_MARB_PSRAM_ADDR_2,			0,	0,	"PSRAM read/write address [7:0]"},
	{ V568_REGTYPE, "V5_REG_MARB_PSRAM_DATA_0",		V5_REG_MARB_PSRAM_DATA_0,			0,	0,	"PSRAM read/write data [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_PSRAM_DATA_1",		V5_REG_MARB_PSRAM_DATA_1,			0,	0,	"PSRAM read/write data [7:0]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_PT_0	",		V5_REG_MARB_JBUF_PT_0	,			0,	0,	"JPEG buffer read/write pointer [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_PT_1	",		V5_REG_MARB_JBUF_PT_1	,			0,	0,	"JPEG buffer read/write pointer [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_JBUF_PT_2	",		V5_REG_MARB_JBUF_PT_2	,			0,	0,	"JPEG buffer read/write pointer [7:0]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_PT_0	",		V5_REG_MARB_TBUF_PT_0	,			0,	0,	"Thumbnail buffer read/write pointer [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_PT_1	",		V5_REG_MARB_TBUF_PT_1	,			0,	0,	"Thumbnail buffer read/write pointer [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_TBUF_PT_2	",		V5_REG_MARB_TBUF_PT_2	,			0,	0,	"Thumbnail buffer read/write pointer [7:0]"},
	{ V568_REGTYPE, "V5_REG_MARB_LAST_PT_0	",		V5_REG_MARB_LAST_PT_0	,			0,	0,	"Last frame JPEG file end point [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_LAST_PT_1	",		V5_REG_MARB_LAST_PT_1	,			0,	0,	"Last frame JPEG file end point [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_LAST_PT_2	",		V5_REG_MARB_LAST_PT_2	,			0,	0,	"Last frame JPEG file end point [7:0]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_PT_0	",		V5_REG_MARB_STO_PT_0	,			0,	0,	"STO buffer read/write pointer [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_PT_1	",		V5_REG_MARB_STO_PT_1	,			0,	0,	"STO buffer read/write pointer [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_STO_PT_2	",		V5_REG_MARB_STO_PT_2	,			0,	0,	"STO buffer read/write pointer [7:0]"},
	{ V568_REGTYPE, "V5_REG_MARB_ABUF_PT_0	",		V5_REG_MARB_ABUF_PT_0	,			0,	0,	"Audio buffer read/write pointer [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_ABUF_PT_1	",		V5_REG_MARB_ABUF_PT_1	,			0,	0,	"Audio buffer read/write pointer [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_ABUF_PT_2	",		V5_REG_MARB_ABUF_PT_2	,			0,	0,	"Audio buffer read/write pointer [7:0]"},
	{ V568_REGTYPE, "V5_REG_MARB_FRAME_CNT_0",		V5_REG_MARB_FRAME_CNT_0	,			0,	0,	"Total frame counter [31:24],\nreset by marb_ctrl1 bit 1"},
	{ V568_REGTYPE, "V5_REG_MARB_FRAME_CNT_1",		V5_REG_MARB_FRAME_CNT_1	,			0,	0,	"Total frame counter [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_FRAME_CNT_2",		V5_REG_MARB_FRAME_CNT_2	,			0,	0,	"Total frame counter [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_FRAME_CNT_3",		V5_REG_MARB_FRAME_CNT_3	,			0,	0,	"Total frame counter [7:0]"},
	{ V568_REGTYPE, "V5_REG_MARB_VIDEO_SIZE_0",		V5_REG_MARB_VIDEO_SIZE_0,			0,	0,	"Total jpeg file size [31:24],\nreset by marb_ctrl1 bit 1£¬in Dword unit"},
	{ V568_REGTYPE, "V5_REG_MARB_VIDEO_SIZE_1",		V5_REG_MARB_VIDEO_SIZE_1,			0,	0,	"Total jpeg file size [23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_VIDEO_SIZE_2",		V5_REG_MARB_VIDEO_SIZE_2,			0,	0,	"Total jpeg file size [15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_VIDEO_SIZE_3",		V5_REG_MARB_VIDEO_SIZE_3,			0,	0,	"Total jpeg file size [7:0]"},
	{ V568_REGTYPE, "V5_REG_MARB_MARB_STAT_0",		V5_REG_MARB_MARB_STAT_0	,			0,	0,	"Marb status register 0\n[0]: JFIFO CNT\n[2]: jpeg done\n[3]: JPEG FIFO overflow\n[4]: TFIFO CNT\n[6]: Thumb  done\n[7]: IPP FIFO overflow"},
	{ V568_REGTYPE, "V5_REG_MARB_MARB_STAT_1",		V5_REG_MARB_MARB_STAT_1	,			0,	0,	"Marb status register 1\n[0]: STO FIFO CNT\n[1]: STO INTERVAL\n[3]: STO OVERFLOW\n[4]: ADO FIFO CNT\n[5]: ADO INTERVAL\n[7]: ADO OVERFLOW"},
	{ V568_REGTYPE, "V5_REG_MARB_WRITE_DATA_0",		V5_REG_MARB_WRITE_DATA_0,			0,	0,	"Marb write sram data[31:24]"},
	{ V568_REGTYPE, "V5_REG_MARB_WRITE_DATA_1",		V5_REG_MARB_WRITE_DATA_1,			0,	0,	"Marb write sram data[23:16]"},
	{ V568_REGTYPE, "V5_REG_MARB_WRITE_DATA_2",		V5_REG_MARB_WRITE_DATA_2,			0,	0,	"Marb write sram data[15:8]"},
	{ V568_REGTYPE, "V5_REG_MARB_WRITE_DATA_3",		V5_REG_MARB_WRITE_DATA_3,			0,	0,	"Marb write sram data[7:0]"},
};

static const TRegUnit gBiuReg[] =
{
	{ V568_REGTYPE, "V5_REG_BIU_CMD", V5_REG_BIU_CMD, 0, 0, "BIU test register" },
	{ V568_REGTYPE, "V5_REG_BIU_MEM_LOW_WORD_L", V5_REG_BIU_MEM_LOW_WORD_L, 0, 0, "Memory low address ([15:0])\n when multiplex bus is used" },
	{ V568_REGTYPE, "V5_REG_BIU_MEM_LOW_WORD_H", V5_REG_BIU_MEM_LOW_WORD_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_BIU_MEM_HIGH_WORD", V5_REG_BIU_MEM_HIGH_WORD, 0, 0 ,"Memory high address ([23:16])\n when multiplex bus is used" },
	{ V568_REGTYPE, "V5_REG_BIU_MEM_FLG", V5_REG_BIU_MEM_FLG, 0, 0 ,"Memory port when multiplex bus is used" },
	{ V568_REGTYPE, "V5_REG_BIU_ADDR_MEM_LOW_L", V5_REG_BIU_ADDR_MEM_LOW_L	, 0, 0, "Memory low address ([15:0])\n  read only" },
	{ V568_REGTYPE, "V5_REG_BIU_ADDR_MEM_LOW_H", V5_REG_BIU_ADDR_MEM_LOW_H	, 0, 0 },
	{ V568_REGTYPE, "V5_REG_BIU_ADDR_MEM_HIGH", V5_REG_BIU_ADDR_MEM_HIGH	, 0, 0, "Memory low address ([23:16])\n  read only" },
	{ V568_REGTYPE, "V5_REG_BIU_MUL_U2IA", V5_REG_BIU_MUL_U2IA, 0, 0 , "High 2 bits of register address\n reserved in the current chip" },
	{ V568_REGTYPE, "V5_REG_BIU_SEL_WRITE_READ", V5_REG_BIU_SEL_WRITE_READ, 0, 0, "Select read/write memory.\n 0: read memory.\n 1: write memory." },
	{ V568_REGTYPE, "V5_REG_BIU_SEL_PORT", V5_REG_BIU_SEL_PORT, 0, 0,"Select port access mode.\n 0: no port, 1: port" },
	{ V568_REGTYPE, "V5_REG_BIU_SEL_8_16", V5_REG_BIU_SEL_8_16, 0, 0,"data bus width of host.\n 0: 8 bit\n 1: 16 bit " },
    { V568_REGTYPE, "V5_REG_BIU_BYPASS_SEL", V5_REG_BIU_BYPASS_SEL, 0, 0, "Bypass mode flag.\n 0: normal\n 1: bypass or direct through" },
	{ V568_REGTYPE, "V5_REG_BIU_REG_8_FLG", V5_REG_BIU_REG_8_FLG, 0, 0, "Register port when 8 bit multiplex bus is used" },
	{ V568_REGTYPE, "V5_REG_BIU_REG_8_LOW_WORD", V5_REG_BIU_REG_8_LOW_WORD, 0, 0, "Register low address when 8 bit multiplex bus is used" },
	{ V568_REGTYPE, "V5_REG_BIU_REG_8_HIGH_WORD", V5_REG_BIU_REG_8_HIGH_WORD, 0, 0, "Register high address when 8 bit multiplex bus is used" },
	{ V568_REGTYPE, "V5_REG_BIU_MEM_8_FLG", V5_REG_BIU_MEM_8_FLG, 0, 0, "Memory port when 8 bit multiplex bus is used" },
	{ V568_REGTYPE, "V5_REG_BIU_PLL_M_L", V5_REG_BIU_PLL_M_L, 0, 0, "Feedback 9-bit divider control pins" },
	{ V568_REGTYPE, "V5_REG_BIU_PLL_M_H", V5_REG_BIU_PLL_M_H, 0, 0 },
	{ V568_REGTYPE, "V5_REG_BIU_PLL_TST", V5_REG_BIU_PLL_TST, 0, 0, "PLL_M and PLL_N divider test mode\n PLL_TST[0:1] = 0:0  N divider test and normal operation TST_OUT = XIN/N,\n PLL_TST[0:1] = 1:1  M divider test  TST_OUT = XIN/M" },
	{ V568_REGTYPE, "V5_REG_BIU_PLL_N", V5_REG_BIU_PLL_N	, 0, 0, "Input 5-bit divider control pins" },
	{ V568_REGTYPE, "V5_REG_BIU_PLL_BP", V5_REG_BIU_PLL_BP	, 0, 0, "Bypass the PLL;  Active high" },
	{ V568_REGTYPE, "V5_REG_BIU_PLL_PD", V5_REG_BIU_PLL_PD	, 0, 0, "Power down control Active high.\n When PLL_PD = PLL_OE =PLL_BP, the PLL work normal" },
	{ V568_REGTYPE, "V5_REG_BIU_PLL_OE", V5_REG_BIU_PLL_OE	, 0, 0, "CLK_OUT enable.\n When PLL_PD = 1 & PLL_OE = 1,  CLK_OUT = 0" },
	{ V568_REGTYPE, "V5_REG_BIU_PLL_OD", V5_REG_BIU_PLL_OD	, 0, 0, "Output divider contro" },
	{ V568_REGTYPE, "V5_REG_BIU_PLL_CLKCTRL", V5_REG_BIU_PLL_CLKCTRL, 0, 0, "Pll clock output divider" },	
	{ V568_REGTYPE, "V5_REG_BIU_BYPASS_ADDR_L", V5_REG_BIU_BYPASS_ADDR_L, 0, 0, "Bypass select register low address" },
	{ V568_REGTYPE, "V5_REG_BIU_BYPASS_ADDR_M", V5_REG_BIU_BYPASS_ADDR_M, 0, 0, "Bypass select register miedial address" },
	{ V568_REGTYPE, "V5_REG_BIU_BYPASS_ADDR_H", V5_REG_BIU_BYPASS_ADDR_H, 0, 0, "Bypass select register high address" },
	{ V568_REGTYPE, "V5_REG_BIU_BYPASS_FROM_SEL", V5_REG_BIU_BYPASS_FROM_SEL, 0, 0, "Select bypass signal from register configuration or GPIO.\n 0: by register\n  1: by GPIO" },
	{ V568_REGTYPE, "V5_REG_BIU_LCDIF_CONFIG", V5_REG_BIU_LCDIF_CONFIG, 0, 0, "[1] bypass_cs_sel\n [0]  cs_sel" },
	{ V568_REGTYPE, "V5_REG_BIU_ADDR_DELAY_SEL", V5_REG_BIU_ADDR_DELAY_SEL, 0, 0, "Delay cell amount used in address bus" },
	{ V568_REGTYPE, "V5_REG_BIU_DATA_OUT_DELAY_SEL", V5_REG_BIU_DATA_OUT_DELAY_SEL, 0, 0, "Delay cell amount used in data_out bus" },
	{ V568_REGTYPE, "V5_REG_BIU_DATA_IN_DELAY_SEL", V5_REG_BIU_DATA_IN_DELAY_SEL, 0, 0, "Delay cell amount used in data_in bus"},
	{ V568_REGTYPE, "V5_REG_BIU_DATA_OEN_SEL", V5_REG_BIU_DATA_OEN_SEL, 0, 0, "Delay cell amount used in data_oen bus"},
	{ V568_REGTYPE, "V5_REG_BIU_CS_DELAY_SEL", V5_REG_BIU_CS_DELAY_SEL, 0, 0, "Delay cell amount used in cs bus" },
	{ V568_REGTYPE, "V5_REG_BIU_WR_THRU_DELAY_SEL", V5_REG_BIU_WR_THRU_DELAY_SEL, 0, 0, "Delay cell amount used in write signal to lcd interface" }
};

static const TRegUnit gGeReg[] =
{
	{ V568_REGTYPE, "V5_REG_GE_BITBLT_CTL0",	V5_REG_GE_BITBLT_CTL0,		0, 0, "Bit-Wise Operation Select.\none of 256 possible bit-wise operations is to be performed\n by the BitBLT engine during a BitBLT operation." },
	{ V568_REGTYPE, "V5_REG_GE_BITBLT_CTL1",	V5_REG_GE_BITBLT_CTL1,		0, 0, "2'b[9:8]:Starting Point Select\n(0 0:Upper Left Corner(default),\n0 1:Upper Right Corner,\n1 0:Bottom Left Corner,\n1 1:Bottom Right Corner,);\n1'b[10]:Source Extend(0:this causes the background and foreground colors \n to be specified by SRC_BG and SRC_FG, respectively.\n1:~PAT_SRC_BG and PAT_SRC_FG, respectively.);\n1'b[11]:Source color depth;\n1'b[12]:Monochrome Source Write-Masking;\n1'b[13]:Color Transparency Enable;\n0: Disables .\n1: Enables\n2'b[15:14]:Color Transparency Select." },
	{ V568_REGTYPE, "V5_REG_GE_BITBLT_CTL2",	V5_REG_GE_BITBLT_CTL2,		0, 0, "1'b[16]:Monochrome Pattern Write-Masking;\n1'b[17]:Pattern Color Depth;\n3'b[20:18]:Reserved;\n3'b[23:21]:BitBLT engine color depth.\n(0 0 0:6-bit RGB565 direct color.  default after reset.\n0 0 1:24-bit RGB888 direct color.)" },
	{ V568_REGTYPE, "V5_REG_GE_BITBLT_CTL3",	V5_REG_GE_BITBLT_CTL3,		0, 0, "3'b[26:24]:Reserved;\n1'b[27]:GE module reset;\n1'b[28]:BitBLT status;(1:busy,0:idle)\n1'b[29]:Start line draw(1:start the line drawing );\n1'b[30]:Start BitBLT(1:start the bitblt );\n1'b[31]:Graphic engine status(1:busy)." },
	{ V568_REGTYPE, "V5_REG_GE_PATTERNPORT_0",	V5_REG_GE_PATTERNPORT_0,	0, 0, "Pattern buffer write data." },
	{ V568_REGTYPE, "V5_REG_GE_PATTERNPORT_1",	V5_REG_GE_PATTERNPORT_1,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_PATTERNPORT_2",	V5_REG_GE_PATTERNPORT_2,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_PATTERNPORT_3",	V5_REG_GE_PATTERNPORT_3,	0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_PATTERN_WRT",	V5_REG_GE_PATTERN_WRT,		0, 0, "1'b[0]:Byte 0 write mask;\n1'b[1]:Byte 1 write mask;\n1'b[2]:Byte 2 write mask;\n1'b[3]:Byte 3 write mask." },
	{ V568_REGTYPE, "V5_REG_GE_PATTERN_ADR",	V5_REG_GE_PATTERN_ADR,		0, 0, "[5:0] Patter buffer write address" },

	{ V568_REGTYPE, "V5_REG_GE_PAT_SRC_BG0",	V5_REG_GE_PAT_SRC_BG0,		0, 0, "Pattern/Source Expansion Background Color & Transparency Key Bits." },
	{ V568_REGTYPE, "V5_REG_GE_PAT_SRC_BG1",	V5_REG_GE_PAT_SRC_BG1,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_PAT_SRC_BG2",	V5_REG_GE_PAT_SRC_BG2,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_PAT_SRC_FG0",	V5_REG_GE_PAT_SRC_FG0,		0, 0, "Pattern/Source Expansion Background Color & Transparency Key Bits." },
	{ V568_REGTYPE, "V5_REG_GE_PAT_SRC_FG1",	V5_REG_GE_PAT_SRC_FG1,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_PAT_SRC_FG2",	V5_REG_GE_PAT_SRC_FG2,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_SRC_BG0",		V5_REG_GE_SRC_BG0,			0, 0, "Source Expansion Background Color & Transparency Key Bits." },
	{ V568_REGTYPE, "V5_REG_GE_SRC_BG1",		V5_REG_GE_SRC_BG1,			0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_SRC_BG2",		V5_REG_GE_SRC_BG2,			0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_SRC_FG0",		V5_REG_GE_SRC_FG0,			0, 0, "Source Expansion Background Color & Transparency Key Bits." },
	{ V568_REGTYPE, "V5_REG_GE_SRC_FG1",		V5_REG_GE_SRC_FG1,			0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_SRC_FG2",		V5_REG_GE_SRC_FG2,			0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_DES_WIDTH_L",	V5_REG_GE_DES_WIDTH_L,		0, 0, "12'b[11:0]:Destination Byte Width." },
	{ V568_REGTYPE, "V5_REG_GE_DES_WIDTH_H",	V5_REG_GE_DES_WIDTH_H,		0, 0, "4'b[15:12]:Reserved." },
	{ V568_REGTYPE, "V5_REG_GE_DES_HEIGHT_L",	V5_REG_GE_DES_HEIGHT_L,		0, 0, "12'b[27:16]:Destination Byte Height." },
	{ V568_REGTYPE, "V5_REG_GE_DES_HEIGHT_H",	V5_REG_GE_DES_HEIGHT_H,		0, 0, "4'b[31:28]:Reserved." },
	{ V568_REGTYPE, "V5_REG_GE_SRC_ADDR0",		V5_REG_GE_SRC_ADDR0,		0, 0, "Source Address." },
	{ V568_REGTYPE, "V5_REG_GE_SRC_ADDR1",		V5_REG_GE_SRC_ADDR1,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_SRC_ADDR2",		V5_REG_GE_SRC_ADDR2,		0, 0, "" },

	{ V568_REGTYPE, "V5_REG_GE_LINECOLOR0",		V5_REG_GE_LINECOLOR0,		0, 0, "Line color.[23:0] 	Pattern Address" },
	{ V568_REGTYPE, "V5_REG_GE_LINECOLOR1",		V5_REG_GE_LINECOLOR1,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_LINECOLOR2",		V5_REG_GE_LINECOLOR2,		0, 0, "" },

	{ V568_REGTYPE, "V5_REG_GE_DES_ADDR0",		V5_REG_GE_DES_ADDR0,		0, 0, "Destination Address." },
	{ V568_REGTYPE, "V5_REG_GE_DES_ADDR1",		V5_REG_GE_DES_ADDR1,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_DES_ADDR2",		V5_REG_GE_DES_ADDR2,		0, 0, "" },
	{ V568_REGTYPE, "V5_REG_GE_SRC_SPAN0",		V5_REG_GE_SRC_SPAN0,		0, 0, "12'b[11:0]:Source Span." },
	{ V568_REGTYPE, "V5_REG_GE_SRC_SPAN1",		V5_REG_GE_SRC_SPAN1,		0, 0, "4'b[15:12]:Reserved." },
	{ V568_REGTYPE, "V5_REG_GE_DST_SPAN0",		V5_REG_GE_DST_SPAN0,		0, 0, "12'b[27:16]:Destination Span." },
	{ V568_REGTYPE, "V5_REG_GE_DST_SPAN1",		V5_REG_GE_DST_SPAN1,		0, 0, "4'b[31:28]:Reserved." },

	{ V568_REGTYPE, "V5_REG_GE_CLIPRECT_LTX_L", V5_REG_GE_CLIPRECT_LTX_L,	0, 0, "12'b[11:0]:X-coordinate of left upper corner of the clipping rectangle." },
	{ V568_REGTYPE, "V5_REG_GE_CLIPRECT_LTX_H", V5_REG_GE_CLIPRECT_LTX_H,	0, 0, "4'b[15:12]:Reserved." },
	{ V568_REGTYPE, "V5_REG_GE_CLIPRECT_LTY_L", V5_REG_GE_CLIPRECT_LTY_L,	0, 0, "12'b[27:16]:Y-coordinate of left upper corner of the clipping rectangle." },
	{ V568_REGTYPE, "V5_REG_GE_CLIPRECT_LTY_H", V5_REG_GE_CLIPRECT_LTY_H,	0, 0, "4'b[31:28]:Reserved." },
	{ V568_REGTYPE, "V5_REG_GE_CLIPRECT_RBX_L", V5_REG_GE_CLIPRECT_RBX_L,	0, 0, "12'b[11:0]:X-coordinate of right bottom corner of the clipping rectangle." },
	{ V568_REGTYPE, "V5_REG_GE_CLIPRECT_RBX_H", V5_REG_GE_CLIPRECT_RBX_H,	0, 0, "4'b[15:12]:Reserved." },
	{ V568_REGTYPE, "V5_REG_GE_CLIPRECT_RBY_L", V5_REG_GE_CLIPRECT_RBY_L,	0, 0, "12'b[27:16]:Y-coordinate of right bottom corner of the clipping rectangle." },
	{ V568_REGTYPE, "V5_REG_GE_CLIPRECT_RBY_H", V5_REG_GE_CLIPRECT_RBY_H,	0, 0, "4'b[31:28]:Reserved." },

	{ V568_REGTYPE, "V5_REG_GE_LINE_STARTPX_L", V5_REG_GE_LINE_STARTPX_L,	0, 0, "12'b[11:0]:Y-coordinate of start point of Bresenham Line Draw." },
	{ V568_REGTYPE, "V5_REG_GE_LINE_STARTPX_H", V5_REG_GE_LINE_STARTPX_H,	0, 0, "4'b[15:12]:Reserved." },
	{ V568_REGTYPE, "V5_REG_GE_LINE_STARTPY_L", V5_REG_GE_LINE_STARTPY_L,	0, 0, "12'b[27:16]:X-coordinate of start point of Bresenham line Draw." },
	{ V568_REGTYPE, "V5_REG_GE_LINE_STARTPY_H", V5_REG_GE_LINE_STARTPY_H,	0, 0, "4'b[31:28]:Reserved." },
	{ V568_REGTYPE, "V5_REG_GE_LINE_ENDPX_L",	V5_REG_GE_LINE_ENDPX_L,		0, 0, "12'b[11:0]:Y-coordinate of end point of Bresenham Line Draw." },
	{ V568_REGTYPE, "V5_REG_GE_LINE_ENDPX_H",	V5_REG_GE_LINE_ENDPX_H,		0, 0, "4'b[15:12]:Reserved." },
	{ V568_REGTYPE, "V5_REG_GE_LINE_ENDPY_L",	V5_REG_GE_LINE_ENDPY_L,		0, 0, "12'b[27:16]:X-coordinate of end point of Bresenham Line Draw." },
	{ V568_REGTYPE, "V5_REG_GE_LINE_ENDPY_H",	V5_REG_GE_LINE_ENDPY_H,		0, 0, "4'b[31:28]:Reserved." }
};

static const TRegUnit gSdifReg[] =
{
	{ V558_REGTYPE, "V8_REG_SDIF_STOMODE", V8_REG_SDIF_STOMODE, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_SOFTRESET", V8_REG_SDIF_SOFTRESET, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_BLKSIZE_H", V8_REG_SDIF_BLKSIZE_H, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_BLKSIZE_L", V8_REG_SDIF_BLKSIZE_L, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_TRANSBLKCNT_H", V8_REG_SDIF_TRANSBLKCNT_H, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_TRANSBLKCNT_L", V8_REG_SDIF_TRANSBLKCNT_L, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_CMDARGU_3", V8_REG_SDIF_CMDARGU_3, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_CMDARGU_2", V8_REG_SDIF_CMDARGU_2, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_CMDARGU_1", V8_REG_SDIF_CMDARGU_1, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_CMDARGU_0", V8_REG_SDIF_CMDARGU_0, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_CMDCTRL0", V8_REG_SDIF_CMDCTRL0, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_CMDCTRL1", V8_REG_SDIF_CMDCTRL1, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_15", V8_REG_SDIF_RESPREG_15, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_14", V8_REG_SDIF_RESPREG_14, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_13", V8_REG_SDIF_RESPREG_13, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_12", V8_REG_SDIF_RESPREG_12, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_11", V8_REG_SDIF_RESPREG_11, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_10", V8_REG_SDIF_RESPREG_10, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_09", V8_REG_SDIF_RESPREG_09, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_08", V8_REG_SDIF_RESPREG_08, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_07", V8_REG_SDIF_RESPREG_07, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_06", V8_REG_SDIF_RESPREG_06, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_05", V8_REG_SDIF_RESPREG_05, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_04", V8_REG_SDIF_RESPREG_04, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_03", V8_REG_SDIF_RESPREG_03, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_02", V8_REG_SDIF_RESPREG_02, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_01", V8_REG_SDIF_RESPREG_01, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESPREG_00", V8_REG_SDIF_RESPREG_00, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_DATAPORT_3", V8_REG_SDIF_DATAPORT_3, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_DATAPORT_2", V8_REG_SDIF_DATAPORT_2, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_DATAPORT_1", V8_REG_SDIF_DATAPORT_1, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_DATAPORT_0", V8_REG_SDIF_DATAPORT_0, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_PRESTATE_L", V8_REG_SDIF_PRESTATE_L, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_PRESTATE_H", V8_REG_SDIF_PRESTATE_H, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_DMACTRL", V8_REG_SDIF_DMACTRL, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_CLKCTRL", V8_REG_SDIF_CLKCTRL, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_NORINT_MASK", V8_REG_SDIF_NORINT_MASK, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_ERR1INT_MASK", V8_REG_SDIF_ERR1INT_MASK, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_ERR2INT_MASK", V8_REG_SDIF_ERR2INT_MASK, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_NORINT_STATUS", V8_REG_SDIF_NORINT_STATUS, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_ERR1INT_STATUS", V8_REG_SDIF_ERR1INT_STATUS, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_ERR2INT_STATUS", V8_REG_SDIF_ERR2INT_STATUS, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RESP_TMOUTCNT", V8_REG_SDIF_RESP_TMOUTCNT, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_BUSYR1B_TMOUT", V8_REG_SDIF_BUSYR1B_TMOUT, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_BUSYCRC_TMOUT", V8_REG_SDIF_BUSYCRC_TMOUT, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_WRITECRC_TMOUT", V8_REG_SDIF_WRITECRC_TMOUT, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_READ_TMOUT", V8_REG_SDIF_READ_TMOUT, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_CARD_ACTLVL", V8_REG_SDIF_CARD_ACTLVL, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RDMBCMD_INDEX", V8_REG_SDIF_RDMBCMD_INDEX, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_WRSBCMD_INDEX", V8_REG_SDIF_WRSBCMD_INDEX, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_WRMBCMD_INDEX", V8_REG_SDIF_WRMBCMD_INDEX, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_RDSBCMD_INDEX", V8_REG_SDIF_RDSBCMD_INDEX, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_IDRDRESP_DMA3", V8_REG_SDIF_IDRDRESP_DMA3, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_IDRDRESP_DMA2", V8_REG_SDIF_IDRDRESP_DMA2, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_IDRDRESP_DMA1", V8_REG_SDIF_IDRDRESP_DMA1, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_IDRDRESP_DMA0", V8_REG_SDIF_IDRDRESP_DMA0, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_IDWRRESP_DMA3", V8_REG_SDIF_IDWRRESP_DMA3, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_IDWRRESP_DMA2", V8_REG_SDIF_IDWRRESP_DMA2, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_IDWRRESP_DMA1", V8_REG_SDIF_IDWRRESP_DMA1, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_IDWRRESP_DMA0", V8_REG_SDIF_IDWRRESP_DMA0, 0, 0 },
	{ V558_REGTYPE, "V8_REG_SDIF_CRC_THRD", V8_REG_SDIF_CRC_THRD, 0, 0 }
};

static const TRegUnit gT1tReg[] =
{
	{ V558_REGTYPE, "V5_REG_T1T_START", V5_REG_T1T_START, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRFLG", V5_REG_T1T_ERRFLG, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT0", V5_REG_T1T_ERRBIT0, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT1", V5_REG_T1T_ERRBIT1, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT2", V5_REG_T1T_ERRBIT2, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT3", V5_REG_T1T_ERRBIT3, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT4", V5_REG_T1T_ERRBIT4, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT5", V5_REG_T1T_ERRBIT5, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT6", V5_REG_T1T_ERRBIT6, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT7", V5_REG_T1T_ERRBIT7, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT8", V5_REG_T1T_ERRBIT8, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT9", V5_REG_T1T_ERRBIT9, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT10", V5_REG_T1T_ERRBIT10, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT11", V5_REG_T1T_ERRBIT11, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT12", V5_REG_T1T_ERRBIT12, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT13", V5_REG_T1T_ERRBIT13, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_ERRBIT14", V5_REG_T1T_ERRBIT14, 0, 0 },
	{ V558_REGTYPE, "V5_REG_T1T_DNFLG", V5_REG_T1T_DNFLG, 0, 0 }
};

const TRegList gV568Reglist[] =
{
	{ "Biu reg", (PTRegUnit)gBiuReg, sizeof(gBiuReg) / sizeof(TRegUnit) },
	{ "GE reg", (PTRegUnit)gGeReg, sizeof(gGeReg) / sizeof(TRegUnit) },
	
	{ "SIF reg", (PTRegUnit)gSifReg, sizeof(gSifReg) / sizeof(TRegUnit)	},
	{ "Ctrl reg", (PTRegUnit)gCtrlReg, sizeof(gCtrlReg) / sizeof(TRegUnit) },
	{ "Isp reg", (PTRegUnit)gIspReg, sizeof(gIspReg) / sizeof(TRegUnit) },
	{ "Ipp reg", (PTRegUnit)gIppReg, sizeof(gIppReg) / sizeof(TRegUnit) },
	{ "LcdIF reg", (PTRegUnit)gLcdIFReg, sizeof(gLcdIFReg) / sizeof(TRegUnit) },
	{ "Jpeg reg", (PTRegUnit)gJpegReg, sizeof(gJpegReg) / sizeof(TRegUnit) },
	{ "Lbuf reg", (PTRegUnit)gLbufReg, sizeof(gLbufReg) / sizeof(TRegUnit) },
	{ "Lcdc reg", (PTRegUnit)gLcdcReg, sizeof(gLcdcReg) / sizeof(TRegUnit) },
	{ "Marb reg", (PTRegUnit)gMarbReg, sizeof(gMarbReg) / sizeof(TRegUnit) },
	{ "Sdif reg", (PTRegUnit)gSdifReg, sizeof(gSdifReg) / sizeof(TRegUnit) },

	{ "Test 1T", (PTRegUnit)gT1tReg, sizeof(gT1tReg) / sizeof(TRegUnit) }
};


const int gV568ReglistCount = sizeof(gV568Reglist) / sizeof(TRegList);




