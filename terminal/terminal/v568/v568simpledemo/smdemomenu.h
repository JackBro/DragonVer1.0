
#ifndef _SMDEMOMENU_H_
#define _SMDEMOMENU_H_

#ifdef __cplusplus
extern "C" {
#endif


#define SMP_MENU_STRING_LEN	20
#define SMP_TIMER_UINT	10000
#define SM_DEFAULT_TIMEOUT	10
#define SMP_MAIN_MENU_IMAGE_SIZE 0x20000

typedef void (*PMenuFunc)(UINT8 key, UINT8* menustring);
typedef void (*PKeyCallBack)(void);

enum MENU_KEYenum
{
	MENU_KEY_UP			= 1,
	MENU_KEY_DOWN		,
	MENU_KEY_LEFT		,
	MENU_KEY_RIGHT		,
	MENU_KEY_SELECT		,
	MENU_KEY_DISAPPEAR	,
	MENU_KEY_EXIT		,
	MENU_KEY_RESET
};


enum MENUITEMenum
{
	MENU_NULL = 0x0,
	MENU_CAMERA = 0x1,
	MENU_DISP,
	MENU_JPEG,
	MENU_SETTING,
	MENU_TEST,
	MENU_EXIT,
	MENU_JPEG_CAP_STI,
	MENU_JPEG_DIS_STI,
	MENU_JPEG_CAP_FRM,
	MENU_JPEG_CAP_VID,
	MENU_JPEG_DIS_VID,
	MENU_JPEG_MULTISHOT,
	MENU_JPEG_ENC,
	MENU_JPEG_DEC,
	MENU_JPEG_EXIT,
	MENU_JPEG_MUL_SEL,
	MENU_JPEG_MUL_DISP,
	MENU_CAMERA_AUTOEXPOSE,
	MENU_CAMERA_BRIGHT,
	MENU_CAMERA_CONTRAST,
	MENU_CAMERA_ZOOM,
	MENU_CAMERA_EFFECT,
	MENU_CAMERA_SIZE,
	MENU_CAMERA_RETURN,
	MENU_CAMERA_EXIT,
	MENU_CAMERA_EFFECT_NORMAL,
	MENU_CAMERA_EFFECT_MONO,
	MENU_CAMERA_EFFECT_SEPIA,
	MENU_CAMERA_EFFECT_SPE_COLOR,
	MENU_CAMERA_EFFECT_NEGA,
	MENU_CAMERA_EFFECT_RELIEF,
	MENU_CAMERA_EFFECT_SKETCH,
	MENU_CAMERA_EFFECT_RETURN,
	MENU_CAMERA_EFFECT_EXIT,
	MENU_CAMERA_SIZE_SXGA,
	MENU_CAMERA_SIZE_VGA,
	MENU_CAMERA_SIZE_QVGA,
	MENU_CAMERA_SIZE_QQVGA,
	MENU_CAMERA_SIZE_RETURN,
	MENU_CAMERA_SIZE_EXIT,
	MENU_DISP_BLENDLING,
	MENU_DISP_OVERLAY,
	MENU_DISP_RM,
	MENU_DISP_LINEDRAW,
	MENU_DISP_BITBLT,
	MENU_DISP_AWIN,
	MENU_DISP_RETURN,
	MENU_DISP_EXIT,
	MENU_DISP_BLENDLING_ADD,
	MENU_DISP_BLENDLING_DEC,
	MENU_DISP_BLENDLING_RETURN,
	MENU_DISP_BLENDLING_EXIT,
	MENU_DISP_OVERLAY_TRAN,
	MENU_DISP_OVERLAY_AND,
	MENU_DISP_OVERLAY_OR,
	MENU_DISP_OVERLAY_INVERT,
	MENU_DISP_OVERLAY_RETURN,
	MENU_DISP_OVERLAY_EXIT,
	MENU_SETTING_ZOOM_MODE,
	MENU_SETTING_ENV,
	MENU_SETTING_CAPSTILL,
	MENU_SETTING_CAPVIDEO,
	MENU_SETTING_RETURN,
	MENU_SETTING_EXIT,
	MENU_SETTING_ZOOM_MODE_FORE,
	MENU_SETTING_ZOOM_MODE_BACK,
	MENU_SETTING_ZOOM_MODE_RETURN,
	MENU_SETTING_ZOOM_MODE_EXIT,
	MENU_SETTING_ENV_AUTO,
	MENU_SETTING_ENV_INDOOR,
	MENU_SETTING_ENV_OUTDOOR,
	MENU_SETTING_ENV_DARK,
	MENU_SETTING_ENV_RETURN,
	MENU_SETTING_ENV_EXIT,
	MENU_SETTING_CAPSTILL_SXGA,
	MENU_SETTING_CAPSTILL_VGA,
	MENU_SETTING_CAPSTILL_760960,
	MENU_SETTING_CAPSTILL_384480,
	MENU_SETTING_CAPSTILL_RETURN,
	MENU_SETTING_CAPSTILL_EXIT,
	MENU_SETTING_CAPVIDEO_QVGA,
	MENU_SETTING_CAPVIDEO_12896,
	MENU_SETTING_CAPVIDEO_128160,
	MENU_SETTING_CAPVIDEO_RETURN,
	MENU_SETTING_CAPVIDEO_EXIT,
	MENU_TEST1,
	MENU_TEST2,
	MENU_TEST3,
	MENU_TEST4,
	MENU_TEST5,
	MENU_TEST6,
	MENU_TEST7,
	MENU_TEST8,
	MENU_TEST9,
	MENU_TEST10,
	MENU_TEST11,
	MENU_TEST12,
	MENU_TEST13,
	MENU_TEST14,
	MENU_TEST15,


	MENU_SEL_EXIT = 0xff
};

enum MENUBGSELenum {
	MENU_BG_NULL,
	MENU_BG_FRAME
};

typedef struct tag_TSmpKeyProc {
	UINT8 key;
	UINT8 index;
	PKeyCallBack pcall;
} TSmpKeyProc, *PTSmpKeyProc;

typedef struct tag_TSmpMenuNode
{
	UINT8 up;
	UINT8 down;
	UINT8 menustr[SMP_MENU_STRING_LEN];
	PMenuFunc pcall;
} TSmpMenuNode, *PTSmpMenuNode;

typedef struct tag_TSmpMenuContext
{
	UINT8 index;		//current menu item index, also indicate menu initial state
	UINT8 preindex;
	UINT8 menuVisual;
	UINT8 timerCounter;
	UINT8 timerSetting;
	UINT8 offset;
	UINT8 style;
	UINT8 maxcount;
} TSmpMenuContext, *PTSmpMenuContext;

void SmpSendKey(UINT8 key);

void	SmpSetIndex(UINT8 index);
UINT8	SmpGetIndex(void);
void	SmpSetTimer(UINT8 val);
UINT8	SmpGetTimer(void);
void	SmpEnableTimer(void);
void	SmpDisableTimer(void);

void	SmpDisappearMenu(void);
void	SmpResetMenu(void);
void	SmpExitMenu(void);

UINT8*	SmpGetString(UINT8 index);

#ifdef __cplusplus
}
#endif

#endif

